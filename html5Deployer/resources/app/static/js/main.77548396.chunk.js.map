{"version":3,"sources":["../external \"{/\"apiUrl/\":/\"http:/localhost:4000/\"}\"","../node_modules/@stencil/core/internal/client lazy /^/.//.*$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","helpers/handleResponse.js","services/authentication.service.js","helpers/authHeader.js","helpers/cards.js","helpers/InvestorsImages.js","helpers/prefixNum.js","helpers/investor.js","helpers/history.js","helpers/centroid.js","helpers/map/createTileLayer.js","helpers/breakText.js","services/user.service.js","services/ngo.service.js","services/projects.service.js","services/models/NonProfitAnalytics.js","services/models/InvestorAnalytics.js","services/models/DashboardAnalytics.js","services/models/OtherProject.js","services/dashboard.service.js","services/models/Project.js","services/models/ProjectAnalytics.js","services/models/AppUser.js","components/route/PrivateRoute.js","pages/auth/RegisterButton.js","pages/auth/Signin.js","hooks/useScrollTop.js","hooks/useWidth.js","hooks/useQuery.js","hooks/useOutsideFocus.js","pages/auth/Signup.js","pages/auth/SignupInvestor.js","pages/auth/SignupNgo.js","pages/general/Navbar.js","pages/general/Footer.js","pages/general/LoadContent.js","pages/general/Loader.js","pages/general/SearchBar.js","pages/general/NavMenu.js","pages/general/UserMenu.js","assets/tree.png","pages/landing-page/About.js","pages/landing-page/Count.js","pages/landing-page/Header.js","pages/landing-page/HowItWorks.js","pages/landing-page/Investors.js","assets/river-across-trees.mp4","pages/landing-page/LandingPage.js","pages/dashboard/Dashboard.js","components/utils/TotalCont.js","pages/dashboard/Main.js","pages/dashboard/Sumary.js","pages/dashboard/SumaryCard.js","pages/dashboard/Analytics.js","pages/dashboard/AddProjectCard.js","pages/account/Account.js","pages/account/Avatar.js","pages/account/Details.js","pages/project/Project.js","pages/project/ProjectForm.js","assets/flat-icon/svg/ecology.svg","assets/flat-icon/svg/green-earth.svg","components/icon/FlatIcon.js","pages/market-place/PaymentMethod.js","pages/market-place/Compensation.js","pages/market-place/Invest.js","hooks/useCounter.js","pages/market-place/InvestButton.js","context/MarketplaceContext.js","pages/market-place/Ngo.js","pages/market-place/NgoLoading.js","pages/market-place/Main.js","reducers/projectsReducer.js","reducers/ngosReducer.js","pages/market-place/MarketPlace.js","pages/market-place/Ngos.js","assets/flat-icon/svg/planting.svg","components/progress/CircularProgress.js","components/progress/ProgressBarProject.js","pages/market-place/ProjectCard.js","assets/flat-icon/svg/agenda.svg","assets/flat-icon/svg/tree.svg","assets/flat-icon/svg/website.svg","assets/flat-icon/svg/area-graph.svg","assets/flat-icon/svg/cloud-computing.svg","assets/flat-icon/svg/save-the-planet.svg","assets/flat-icon/svg/world-environment-day.svg","assets/flat-icon/svg/location.svg","assets/flat-icon/svg/person.svg","assets/flat-icon/svg/money.svg","pages/market-place/DetailsCard.js","pages/market-place/ProjectDetails.js","components/map/BubbleMap.js","helpers/map/createMapView.js","pages/market-place/ProjectMap.js","pages/market-place/ProjectCardLoading.js","pages/market-place/Projects.js","routers/AppRouter.js","App.js","reportWebVitals.js","index.js","../external \"{/\"apiUrl/\":/\"/api/catalog/\"}\""],"names":["module","exports","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","handleResponse","response","text","data","JSON","parse","ok","indexOf","status","authenticationService","logout","window","location","reload","error","message","statusText","reject","currentUserSubject","BehaviorSubject","localStorage","getItem","login","username","password","fetch","config","apiUrl","method","user","currentUser","AppUser","value","setItem","stringify","next","removeItem","asObservable","currentUserValue","authHeader","token","Authorization","cards","step","description","image","process","prefixNum","width","sufix","number","parseInt","toLocaleString","parseFloat","toFixed","investor","url","name","createBrowserHistory","getCentroid","boundaries","Point","x","y","this","Region","points","length","prototype","area","i","j","point1","point2","Coordinate_Longitude","Coordinate_Latitude","centroid","f","createTileLayer","vectorTileLayer","VectorTileLayer","portalItem","Basemap","baseLayers","breakText","substr","userService","getAll","requestOptions","headers","getById","getCountries","resp","getUserInvestment","userId","ngoService","map","ngo","getByUserId","ID","getNGOInvestment","getNGOAnalytics","ngoId","projectsService","all","project","getAnalyticsById","analytics","Analytics","Project","getByNgoId","getNGOInvestedProjects","getUserInvestedProjects","getProjectInvestment","projectId","createInvestment","invest","body","Sender_ID","NonProfitAnalytics","APPUSER_ID","followers","FOLLOWERCOUNT","investors","INVESTORCOUNT","treesPlanted","TOTALTREESPLANTED","offsetTCO2E","TOTALOFFSETEXPECTED_TCO2E","costAverage","SOWCOSTAVERAGE","conservationCost","CONSERVATIONCOST","totalGross","TOTALGROSS","totalNet","TOTALNET","InvestorAnalytics","blocks","BLOCKSPURCHASED","DashboardAnalytics","Name","banner","Banner_Type","actualTrees","TOTALBLOCKSPURCHASED","goalTrees","TOTALPLANTINGCAPACITY","invested","OtherProject","owner","Owner_AppUser_ID","Description_Line1","Description_Line2","Description_Line3","Country_code","country","SiteOwnership_ID","PlantingArea_m2","plantingArea","PlantingDensity_m2","plantingDensity","WorkerCount","workerCount","point","Centroid_Latitude","Centroid_Longitude","getUser","isDashboard","a","opts","getAnalytics","type","collection","getProjectAnalytics","field","analyticsUrl","projectsUrl","resp2","projects","merged","forEach","item","find","projectAnalytics","push","toMap","createProject","createBoundaries","boundariesRequests","Project_ID","createPlantingCost","cost","dashboardService","createdAt","createdBy","modifiedAt","modifiedBy","logo","Logo_Type","pictures","Pictures","countryCode","centroidLat","centroidLon","siteId","certifierId","Certifier_AppUser_ID","goalT","treeCost","Boundaries","ownerShip","SiteOwnership","Description","Owner","ProjectAnalytics","OWNER_APPUSER_ID","latitude","CENTROID_LATITUDE","longitude","CENTROID_LONGITUDE","WORKERCOUNT","certifierUserId","CERTIFIER_APPUSER_ID","followerId","FOLLOWER_ID","investorId","INVESTOR_ID","PLANTINGAREA_M2","plantingDensityM2","PLANTINGDENSITY_M2","sowCost","SOWCOST","blockAreaM2","BLOCKAREA_M2","totalBlockCapacity","TOTALBLOCKCAPACITY","blockPlantingCapacity","BLOCKPLANTINGCAPACITY","totalPlantingCapacity","blockOffsetAverage","BLOCKOFFSETAVERAGE_TCO2E_YEAR","blockInitialCost","BLOCKINITIALCOST","blockupKeepCost","BLOCKUPKEEPCOST","createDate","CREATEDAT","offsetAverageTCo2","OFFSETAVERAGE_TCO2E_YEAR_TREE","totalTreesPlanted","totalOffsetExpectedTCo2","totalBlocksPurchased","followerCount","investorCount","co2AverageCost","DisplayName","legalName","LegalName","email","Email","Type","Status","facebook","Facebook","instagram","Instagram","twitter","Twitter","youtube","YouTube","linkedIn","LinkedIn","webpage","WebpageURL","img","ProfileImage_Type","preferredCurrencyCode","PreferredCurrency_code","preferredLanguageCode","PreferredLanguage_code","taxId","TaxID","taxAddress","TaxAddress_ID","PrivateRoute","Component","component","roles","rest","render","props","role","to","pathname","state","from","RegisterButton","React","memo","scrollTop","useState","showS","setShowS","handleShowS","className","onClick","handleCloseS","Signin","handleClose","show","initialState","loading","isLoged","loged","setLoged","history","useHistory","viewPass","setViewPass","loginUser","setTimeout","useForm","mode","criteriaMode","register","handleSubmit","errors","formState","Modal","onHide","centered","Header","closeButton","Title","Body","Form","onSubmit","autoComplete","Group","controlId","Label","Control","placeholder","required","isInvalid","Text","InputGroup","Append","style","zIndex","height","position","right","display","alignItems","icon","faEye","faEyeSlash","href","useScrollTop","setScrollTop","onLoad","useCallback","scroll","target","documentElement","onScroll","useEffect","addEventListener","removeEventListener","useWidth","bodyWidth","setBodyWidth","document","querySelector","offsetWidth","onResize","useQuery","queryParam","URLSearchParams","useLocation","search","get","useOutsideFocus","ref","isOutside","setIsOutside","checkOutsideClick","current","contains","Signup","openSection","setOpenSection","registered","section","click","setClick","setData","countries","onClose","chooseSection","sectionVal","OverlayTrigger","placement","overlay","Tooltip","faArrowCircleLeft","Row","Col","onMouseEnter","undefined","class","SignupInvestor","reValidateMode","getValues","viewConfirmPass","setViewConfirmPass","alert","minLength","maxLength","pattern","validate","confirmPassword","Check","label","check","SignupNgo","autocomplete","as","element","trigger","Popover","Content","faInfoCircle","registrationId","Navbar","useMeasure","setShow","handleShow","page","NavMenu","SearchBar","onLogOut","Footer","today","Date","faFacebookSquare","faTwitterSquare","faInstagramSquare","getFullYear","LoadContent","children","isLoaded","setisLoaded","Loader","Spinner","console","log","setSearch","searchHistory","setSearchHistory","toggleList","setToggleList","useRef","query","onSearch","includes","newSearchHistory","concat","pop","onChange","onFocus","onKeyPress","charCode","faSearch","padding","faTimes","size","pos","filter","onDelete","menu","link","useSpring","backgroundColor","menuStyles","menuController","useTrail","transform","opacity","itemsStyles","itemsController","onOpen","start","delay","stiff","div","li","UserMenu","src","alt","faCaretDown","faCaretUp","path","About","bounds","slow","setAnimationTitle","animation","setAnimation","top","Tree","Count","numSpring","animated","open","h3","n","titles","num","title","countSpring","index","HowItWorks","setOpen","animationRef","useSpringRef","cardRef","cardAnimation","useChain","topSection","array","Investors","dots","infinite","slidesToShow","slidesToScroll","autoplay","speed","autoplaySpeed","cssEase","LandingPage","setIsLoaded","autoPlay","muted","loop","onLoadStart","onLoadedData","RiverTrees","background","Dashboard","setUser","catch","err","TotalCount","val1","val2","p","simbol","Main","setAnalytics","faFacebook","faInstagram","faTwitter","faLinkedin","Sumary","setProjects","sm","md","lg","v1","v2","v3","v4","SumaryCard","toggleInfo","setToggleInfo","timestamp","getTime","DATA","Card","Img","variant","ImgOverlay","faCog","triggerHandler","ProgressBar","now","styles","buildStyles","rotation","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","Id","selected","xType","curve","color","hideLine","tickFormat","v","AddProjectCard","onToggle","Account","Container","fluid","xs","DisplayPicture","Avatar","Figure","Image","Details","setName","setEmail","website","setWebsite","setFacebook","setInstagram","setTwitter","setLinkedIn","EmailAddress","Website","setProject","ProjectForm","setError","fileLabel","setFileLabel","setBoundaries","progress","setProgress","rawContries","currencies","rawCurrencies","margin","Alert","dismissible","Feedback","rows","currency","File","custom","accept","file","files","reader","FileReader","onload","ev","bstr","result","wb","XLSX","read","wsname","SheetNames","ws","Sheets","utils","sheet_to_csv","header","dataStringLines","split","row","obj","Index","Object","values","findIndex","val","isNaN","processData","readAsBinaryString","Button","disabled","buttonState","FlatIcon","PaymentMethod","recipientId","ownerId","compensation","estimated","costConcept","total","counter","paymentMethodSelected","setPaymentMethodSelected","paying","setPaying","Amount","Unit","CostPerUnit","Currency_code","Recipient_ID","Owner_ID","comp","setCompensation","faCheckCircle","faPaypal","faMoneyCheckAlt","Compensation","investForm","count","kpi","costCompensation","setValue","setCounter","increment","decrement","costPerTree","carbonOffsetPerTree","carbonOffsetSymbol","setCost","faMinus","fontSize","textAlign","min","onKeyUp","faPlus","Invest","carbonPerTree","sections","ask","sectionSelected","back","payment","setSection","setDisabled","useCounter","nextSection","left","EcologyIcon","GreenEarthIcon","InvestButton","MarketplaceContext","createContext","Ngo","ngos","useRouteMatch","Investments","Trees","Tree_cost","summary","setSummary","faArrowLeft","goBack","NgoLoading","uniqueKey","viewBox","foregroundColor","rx","ry","cx","cy","r","ngosRed","useContext","dispatch","payload","projectsReducer","action","ngosReducer","MarketPlace","projectsRed","useReducer","Provider","overflow","exact","Ngos","onFilterByNgos","CircularProgress","currentT","marginTop","PlantingIcon","ProgressBarProject","ProjectCard","objectFit","faHeart","faShareAlt","desc","DetailsCard","LocationIcon","fontWeight","projectDesc","TreeIcon","marginRight","CloudIcon","AreaGraphIcon","WorldEnvIcon","SavePlanetIcon","PersonIcon","WebSiteIcon","AgendaIcon","ProjectDetails","isMounted","lenght","BubbleMap","mapDiv","view","setView","graphicLayer","setGraphicLayer","basemap","Map","MapView","center","zoom","container","navigation","mouseWheelZoomEnabled","browserTouchPanEnabled","ui","move","constraints","minScale","maxScale","rotationEnabled","basemapToggle","BasemapToggle","nextBasemap","add","createMapView","GraphicsLayer","removeAll","duration","easing","polygonCordinates","cordinates","polygonGraphic","Graphic","geometry","rings","symbol","outline","when","goTo","centro","attributes","projectID","imageSymbol","pointGraphic","on","event","hitTest","results","graphic","layer","ProjectMap","ProjectCardLoading","Projects","key","AppRouter","basename","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","apiKey","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.77548396.chunk.js","sourcesContent":["module.exports = {\"apiUrl\":\"http://localhost:4000\"};","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 538;","import { authenticationService } from \"@/services\";\n\nexport function handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if ([401, 403].indexOf(response.status) !== -1) {\n                // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n                authenticationService.logout();\n                window.location.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}","import { BehaviorSubject } from \"rxjs\";\nimport { handleResponse } from \"../helpers/handleResponse\";\nimport{AppUser} from \"./\";\n// import config from \"configFake\";\nimport config from \"config\";\n\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem(\"currentUser\")));\n\nexport const authenticationService = {\n    login,\n    logout,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue() { return currentUserSubject.value }\n};\n\n// function login(username, password) {\n//     const requestOptions = {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ EmailAddress: username, Password: password })\n//     };\n//     return fetch(`${config.apiUrl}/users/authenticate`, requestOptions)\n//         .then(handleResponse)\n//         .then(user => {\n//             // store user details and jwt token in local storage to keep user logged in between page refreshes\n//             localStorage.setItem(\"currentUser\", JSON.stringify(user));\n//             currentUserSubject.next(user);\n//             return user;\n//         });\n// }\n\n//Backend\n\nfunction login(username, password) {\n    const requestOptions = {\n        method: \"GET\",\n    };\n    return fetch(`${config.apiUrl}/AppUsers?$filter=Email eq '${username}'`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            const currentUser = new AppUser(user.value[0]);\n            localStorage.setItem(\"currentUser\", JSON.stringify(currentUser));\n            currentUserSubject.next(currentUser);\n            return currentUser;\n        });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem(\"currentUser\");\n    currentUserSubject.next(null);\n\n}","import { authenticationService } from \"@/services\";\n\nexport function authHeader() {\n    // return authorization header with jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.token) {\n        return { Authorization: `Bearer ${currentUser.token}` };\n    } else {\n        return {};\n    }\n}","\n\nexport const cards = [\n    {\n        step: \"Step 1\",\n        description: \"Inside of our marketplace, you can navigate through different projects and NGOs around the world, analyzing their goals and proposals. When you find a project you're passionate about, it’s time to invest on it!\",\n        image: `${process.env.PUBLIC_URL}/assets/cards/step1.png`,\n    },\n    {\n        step: \"Step 2\",\n        description: \"In the moment that we confirm your payment, the NGO starts to pool donations and continue the project’s process. As soon as your trees are planted, GreenSAP starts to monitor reforestation progress by evaluating standard vegetation indices (NDVI) via remote satellite imaging, so you can track your donation everywhere.\",\n        image: `${process.env.PUBLIC_URL}/assets/cards/step2.png`,\n    },\n    {\n        step: \"Step 3\",\n        description: \"After each project, trees are maintained and monitored to ensure that we are giving back to the environment. As we want to guarantee confidence and visibility to donation process, we also provide reports on impact generated, so you can understand how important is to investin reforestation efforts.\",\n        image: `${process.env.PUBLIC_URL}/assets/cards/step3.png`,\n    }];\n\n\n","\nimport {investor} from \".\";\n\nexport const investorImages = () => {\n\n    const investors = [\n        investor(\"coca-cola.png\", \"Coca Cola\", 1),\n        investor(\"microsoft.png\", \"Microsoft\", 2),\n        investor(\"facebook.png\", \"Facebook\", 3),\n        investor(\"spacex.png\", \"SpaceX\", 4),\n        investor(\"sap.png\", \"SAP\", 5),\n        investor(\"airfrance.png\", \"Air France\", 6),\n        investor(\"airbnb.png\", \"Airbnb\", 7),\n        investor(\"ford.png\", \"Ford\", 8),\n    ];\n    return investors;\n}\n","export const prefixNum = (width, value, sufix) => {\n     \n    \n    \n    if(!value) return 0;\n\n    var number = parseInt(value).toLocaleString(\"EN-us\");\n    \n    if(width < 720 && value > 999 && value < 1000000){\n        number = value / 1000;\n        return parseFloat(number.toFixed(0))+`K`;\n    } else if(width < 720 && value > 999999) {\n        number = value / 1000000;\n        return parseFloat(number.toFixed(0))+`M`;\n    } \n    return number;\n}\n","\nexport const investor = (url, name, id) => {\n\n    const investor = {\n\n        id: `${id}`,\n        name: `${name}`,\n        url: `${process.env.PUBLIC_URL}/assets/investors/${url}`\n\n    }\n    return investor;\n}","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();","export function getCentroid(boundaries) {\n\n    function Point(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    function Region(points) {\n        this.points = points || [];\n        this.length = points.length;\n    }\n\n    Region.prototype.area = function () {\n        var area = 0,\n            i,\n            j,\n            point1,\n            point2;\n\n        for (i = 0, j = this.length - 1; i < this.length; j = i, i += 1) {\n            point1 = this.points[i];\n            point2 = this.points[j];\n            area += point1.Coordinate_Longitude * point2.Coordinate_Latitude;\n            area -= point1.Coordinate_Latitude * point2.Coordinate_Longitude;\n        }\n        area /= 2;\n\n        return area;\n    };\n\n    Region.prototype.centroid = function () {\n        var x = 0,\n            y = 0,\n            i,\n            j,\n            f,\n            point1,\n            point2;\n\n        for (i = 0, j = this.length - 1; i < this.length; j = i, i += 1) {\n            point1 = this.points[i];\n            point2 = this.points[j];\n            f = point1.Coordinate_Longitude * point2.Coordinate_Latitude - point2.Coordinate_Longitude * point1.Coordinate_Latitude;\n            x += (point1.Coordinate_Longitude + point2.Coordinate_Longitude) * f;\n            y += (point1.Coordinate_Latitude + point2.Coordinate_Latitude) * f;\n        }\n\n        f = this.area() * 6;\n\n        return new Point(x / f, y / f);\n    };\n\n    const region = new Region(boundaries);\n\n    return region.centroid()\n}","\nimport VectorTileLayer from \"@arcgis/core/layers/VectorTileLayer\";\nimport Basemap from \"@arcgis/core/Basemap\";\n\nexport const createTileLayer = () => {\n    \n    const vectorTileLayer = new VectorTileLayer({\n        portalItem: {\n            id: \"e53d5e80c71e419db2ff75f25682ab9f\" \n        },\n    });\n    \n    const basemap = new Basemap({\n        baseLayers: [\n    \n            vectorTileLayer\n    \n        ]\n    });\n\n    return basemap\n}\n\n\n","export const breakText = (text, value = 13) => {\n    if (text.length > value) {\n        return `${text.substr(0, (value - 3))}...`;\n    }\n    return text;\n}","import config from \"configFake\";\nimport { authHeader, handleResponse } from \"@/helpers\";\n\nexport const userService = {\n    getAll,\n    getById,\n    getCountries,\n    getUserInvestment,\n};\n\nfunction getAll() {\n    const requestOptions = { method: \"GET\", headers: authHeader() };\n    return fetch(`${config.apiUrl}/users`, requestOptions).then(handleResponse);\n}\n\nfunction getCountries() {\n    const requestOptions = { method: \"GET\", headers: authHeader() };\n    return fetch(`${config.apiUrl}/Countries`, requestOptions).then(handleResponse).then(\n        resp => resp.value\n    );\n}\n\nfunction getById(id) {\n    const requestOptions = { method: \"GET\", headers: authHeader() };\n    return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction getUserInvestment(userId) {\n    const requestOptions = { method: \"GET\", headers: authHeader() };\n    return fetch(`${config.apiUrl}/users/${userId}/investments`, requestOptions).then(handleResponse);\n}\n","// import config from \"configFake\";\nimport config from \"config\";\nimport { authHeader, handleResponse } from \"@/helpers\";\nimport { authenticationService } from \"./\";\nimport { AppUser } from \"./\";\n\n\nconst currentUser = authenticationService.currentUserValue;\n\nexport const ngoService = {\n    getAll,\n    getByUserId,\n    getNGOInvestment,\n    getNGOAnalytics,\n    getById\n};\n\nfunction getAll() {\n    const requestOptions = { method: \"GET\", headers: authHeader() };\n    return fetch(`${config.apiUrl}/AppUsers?$filter=Type eq 'nonprofit'`, requestOptions).then(handleResponse).then(\n        resp => {\n            return resp.value.map(ngo=>{\n                return new AppUser(ngo);\n            });\n        }\n    );\n}\n\nfunction getByUserId() {\n    const userId = currentUser.ID;\n    const requestOptions = { method: \"GET\", headers: authHeader() };\n    return fetch(`${config.apiUrl}/ngos/user/${userId}`, requestOptions).then(handleResponse);\n}\n\nfunction getById(ngoId) {\n    const requestOptions = { method: \"GET\", headers: authHeader() };\n    return fetch(`${config.apiUrl}/AppUsers?$filter=ID eq ${ngoId}`, requestOptions).then(handleResponse).then(\n        resp => {\n            return resp.value.map(ngo=>{\n                return new AppUser(ngo);\n            });\n        }\n    );\n}\n\nfunction getNGOInvestment(userId) {\n    const requestOptions = { method: \"GET\", headers: authHeader() };\n    return fetch(`${config.apiUrl}/ngos/${userId}/investments`, requestOptions).then(handleResponse);\n}\n\nfunction getNGOAnalytics(userId) {\n    const requestOptions = { method: \"GET\", headers: authHeader() };\n    return fetch(`${config.apiUrl}/NonProfitAnalytics?$filter=APPUSER_ID eq '${userId}'`, requestOptions).then(handleResponse);\n}","// import config from \"configFake\";\nimport config from \"config\";\nimport { authHeader, handleResponse } from \"@/helpers\";\nimport { authenticationService } from \"./\";\nimport { Project } from \"./\";\n\nconst currentUser = authenticationService.currentUserValue;\n\nexport const projectsService = {\n    getAll,\n    getById,\n    getByNgoId,\n    getNGOInvestedProjects,\n    getUserInvestedProjects,\n    getProjectInvestment,\n    createInvestment,\n};\n\nfunction getAnalyticsById(id) {\n    const requestOptions = { method: \"GET\", headers: authHeader() };\n    return fetch(`${config.apiUrl}/ProjectAnalytics?$filter=ID eq '${id}'`, requestOptions).then(handleResponse).then(\n        resp => resp.value[0]\n    );\n\n}\n\nfunction getAll() {\n    const requestOptions = { method: \"GET\", headers: authHeader() };\n    return fetch(`${config.apiUrl}/Projects?$expand=Owner($expand=AppUser),Boundaries`, requestOptions).then(handleResponse).then(\n        // resp => Promise.all(resp.value.map(project => {\n        //     return getAnalyticsById(project.ID).then(analytics => {\n        //         project = { ...project, Analytics: analytics };\n        //         return new Project(project);\n        //     });\n        // }))\n        resp => Promise.all(resp.value.map(project => {\n            return getAnalyticsById(project.ID).then(analytics => {\n                project = { ...project, Analytics: analytics };\n                return new Project(project);\n            });\n        }))\n    );\n}\n\nfunction getById(id) {\n    // const userId = currentUser.ID || null;\n    const requestOptions = { method: \"GET\", headers: authHeader() };\n    return fetch(`${config.apiUrl}/Projects?$expand=Owner($expand=AppUser),Boundaries&$filter=ID eq ${id}`, requestOptions).then(handleResponse)\n        .then(resp => Promise.all(resp.value.map(project => {\n            return getAnalyticsById(project.ID).then(analytics => {\n                project = { ...project, Analytics: analytics };\n                return new Project(project);\n            });\n        }))\n        );\n}\n\nfunction getByNgoId(ngoId) {\n    // const userId = currentUser.ID || null;\n    const requestOptions = { method: \"GET\", headers: authHeader() };\n    return fetch(`${config.apiUrl}/Projects?$expand=Owner($expand=AppUser),Boundaries,SiteOwnership&$filter=Owner_AppUser_ID eq ${ngoId}`, requestOptions).then(handleResponse).then(\n        resp => Promise.all(resp.value.map(project => {\n            return getAnalyticsById(project.ID).then(analytics => {\n                project = { ...project, Analytics: analytics };\n                return new Project(project);\n            });\n        }))\n    );\n}\n\nfunction getNGOInvestedProjects(userId) {\n    const requestOptions = { method: \"GET\", headers: authHeader() };\n    return fetch(`${config.apiUrl}/projects/ngo/${userId}/investments`, requestOptions).then(handleResponse);\n}\n\nfunction getProjectInvestment(projectId) {\n    const requestOptions = { method: \"GET\", headers: authHeader() };\n    return fetch(`${config.apiUrl}/project/${projectId}/investments`, requestOptions).then(handleResponse);\n}\n\n\nfunction getUserInvestedProjects(userId) {\n    const requestOptions = { method: \"GET\", headers: authHeader() };\n    return fetch(`${config.apiUrl}/projects/user/${userId}/investments`, requestOptions).then(handleResponse);\n}\n\nfunction createInvestment(invest) {\n    const userId = currentUser.ID;\n    const requestOptions = {\n        method: \"POST\",\n        headers: authHeader(),\n        body: JSON.stringify({ ...invest, Sender_ID: userId }),\n        // body: JSON.stringify({\n        //     Amount: unit * tree_cost,\n        //     Unit: unit,\n        //     CostPerUnit: tree_cost,\n        //     Currency_code: \"USD\",\n        //     Sender_ID: userId,\n        //     Recipient_ID: projectId,\n        //     Owner_ID: ownerId,\n        // }),\n    };\n    return fetch(`${config.apiUrl}/projects/invest`, requestOptions).then(handleResponse);\n}\n\n\n\n\n// function getByUserId() {\n//     const userId = currentUser.ID;\n//     const requestOptions = { method: \"GET\", headers: authHeader() };\n//     return fetch(`${config.apiUrl}/NonProfits(${userId})?$expand=Projects`, requestOptions).\n//     then(handleResponse)\n//     .then(resp => resp.json())\n//     .then(user => {\n//         return user.Projects;\n//     });\n// }","class NonProfitAnalytics{\n  constructor(data = {}) {\n    this.userId = data.APPUSER_ID ?? '';\n    this.followers = data.FOLLOWERCOUNT ?? 0;\n    this.investors = data.INVESTORCOUNT ?? 0;\n    this.treesPlanted = data.TOTALTREESPLANTED ?? 0;\n    this.offsetTCO2E = data.TOTALOFFSETEXPECTED_TCO2E ?? 0;\n    this.costAverage = data.SOWCOSTAVERAGE ?? 0;\n    this.conservationCost = data.CONSERVATIONCOST ?? 0;\n    this.totalGross = data.TOTALGROSS ?? 0;\n    this.totalNet = data.TOTALNET ?? 0;\n  }\n}\n\nexport default NonProfitAnalytics;","class InvestorAnalytics{\n  constructor(data = {}) {\n    this.userId = data.APPUSER_ID ?? '';\n    this.blocks = data.BLOCKSPURCHASED ?? 0;\n    this.totalGross = data.TOTALGROSS ?? 0;\n    this.totalNet = data.TOTALNET ?? 0;\n  }\n}\n\nexport default InvestorAnalytics;","class DashboardAnalytics{\n  constructor(project, analytics) {\n    this.id = project.ID ?? '';\n    this.name = project.Name ?? '';\n    this.banner = project.Banner_Type || `${process.env.PUBLIC_URL}/assets/ngo-project-1.jpeg`;\n    this.actualTrees = analytics.TOTALBLOCKSPURCHASED ?? 0;\n    this.goalTrees = analytics.TOTALPLANTINGCAPACITY ?? 0;\n    this.invested = analytics.TOTALNET ?? 0;\n  }\n\n  toMap() {\n    return {\n      id: this.id,\n      name: this.name,\n      banner: this.banner,\n      actualTrees: this.actualTrees,\n      goalTrees: this.goalTrees,\n      invested: this.invested,\n    };\n  }\n}\n\nexport default DashboardAnalytics;","import { getCentroid } from \"@/helpers\";\n\nclass OtherProject{\n  constructor(owner, data, boundaries) {\n    this.Owner_AppUser_ID = owner.id;\n    this.Name = data.name;\n    this.Description_Line1 = data.description;\n    this.Description_Line2 = \"\";\n    this.Description_Line3 = \"\";\n    this.Country_code = data.country;\n    this.SiteOwnership_ID = \"e9f6e85b-da5e-4efa-b762-986a6ff0a620\";\n    this.PlantingArea_m2 = parseFloat(data.plantingArea) ?? 0;\n    this.PlantingDensity_m2 = parseFloat(data.plantingDensity) ?? 0;\n    this.WorkerCount = parseInt(data.workerCount) ?? 0;\n    const point = getCentroid(boundaries);\n    this.Centroid_Latitude = point.y;\n    this.Centroid_Longitude = point.x;\n  }\n\n  toMap() {\n    return {\n      Owner_AppUser_ID: this.Owner_AppUser_ID,\n      Name: this.Name,\n      Description_Line1: this.Description_Line1,\n      Description_Line2: this.Description_Line2,\n      Description_Line3: this.Description_Line3,\n      Country_code: this.Country_code,\n      SiteOwnership_ID: this.SiteOwnership_ID,\n      PlantingArea_m2: this.PlantingArea_m2,\n      PlantingDensity_m2: this.PlantingDensity_m2,\n      WorkerCount: this.WorkerCount,\n      Centroid_Latitude: this.Centroid_Latitude,\n      Centroid_Longitude: this.Centroid_Longitude,\n    };\n  }\n}\n\nexport default OtherProject;","import config from \"config\";\nimport { AppUser, authenticationService } from \"./\";\nimport { handleResponse } from \"@/helpers\";\nimport NonProfitAnalytics from './models/NonProfitAnalytics';\nimport InvestorAnalytics from './models/InvestorAnalytics';\nimport DashboardAnalytics from \"./models/DashboardAnalytics\";\nimport OtherProject from \"./models/OtherProject\";\n\nconst getUser = async (isDashboard, id) => {\n  const opts = { method: \"GET\", headers: {} };\n  if (isDashboard) {\n    return authenticationService.currentUserValue;\n  } else if (!isDashboard && id !== null) {\n    const url = `${config.apiUrl}/AppUsers(${id})`;\n    const resp = await fetch(url, opts).then(handleResponse);\n    const user = new AppUser(resp);\n    return user;\n  }\n};\n\nconst getAnalytics = async (type, id) => {\n  const opts = { method: \"GET\", headers: {} };\n  const collection = (type === 'nonprofit') ? 'NonProfitAnalytics' : 'InvestorAnalytics';\n  const url = `${config.apiUrl}/${collection}?$filter=APPUSER_ID eq '${id}'`;\n  const resp = await fetch(url, opts).then(handleResponse);\n  const analytics = (type === 'nonprofit') ? new NonProfitAnalytics(resp.value[0]) : new InvestorAnalytics(resp.value[0]);\n  return analytics\n};\n\nconst getProjectAnalytics = async (type, id) => {\n  const opts = { method: \"GET\", headers: {} };\n\n  // Get Project Analytics information\n  const field = (type === 'nonprofit') ? 'OWNER_APPUSER_ID' : 'INVESTOR_ID';\n  const analyticsUrl = `${config.apiUrl}/ProjectAnalytics?$filter=${field} eq '${id}'`;\n  const resp = await fetch(analyticsUrl, opts).then(handleResponse);\n  const analytics = resp.value;\n  \n  // Get Projects information\n  const projectsUrl = `${config.apiUrl}/Projects`;\n  const resp2 = await fetch(projectsUrl, opts).then(handleResponse);\n  const projects = resp2.value;\n\n  // Merge Analytics with Projects\n  let merged = [];\n  analytics.forEach(item => {\n    const project = projects.find(project => item.ID === project.ID);\n    const projectAnalytics = new DashboardAnalytics(project, item);\n    merged.push(projectAnalytics.toMap());\n  });\n\n  return merged;\n};\n\nconst createProject = async (data, boundaries) => {\n  const owner = authenticationService.currentUserValue;\n  const project = new OtherProject(owner, data, boundaries);\n  const opts = {\n    method: \"POST\",\n    headers: {\"content-type\": \"application/json\"},\n    body: JSON.stringify(project.toMap()),\n  };\n  const url = `${config.apiUrl}/Projects`;\n  const resp = await fetch(url, opts).then(handleResponse);\n  return resp.ID;\n};\n\n// a1f6b262-9a25-486f-85d7-5a4fc048d454\nconst createBoundaries = async (projectId, boundaries) => {\n  const url = `${config.apiUrl}/Boundaries`;\n  const boundariesRequests = boundaries.map(item => {\n    item.Project_ID = projectId;\n    const opts = {\n      method: \"POST\",\n      headers: {\"content-type\": \"application/json\"},\n      body: JSON.stringify(item),\n    };\n    return fetch(url, opts);\n  });\n\n  await Promise.all(boundariesRequests);\n  return;\n};\n\nconst createPlantingCost = async (id, cost) => {\n  const opts = {\n    method: \"POST\",\n    headers: {\"content-type\": \"application/json\"},\n    // body: JSON.stringify(item),\n  };\n  const url = `${config.apiUrl}/PlantingCosts`;\n  await fetch(url, opts).then(handleResponse);\n  return;\n};\n\nexport const dashboardService = {\n  getUser,\n  getAnalytics,\n  getProjectAnalytics,\n  createProject,\n  createBoundaries,\n  createPlantingCost,\n};","\nimport { AppUser, ProjectAnalytics } from \"..\";\n\nexport class Project{\n  constructor(data = {}) {\n      this.id = data.ID;\n      this.createdAt = data.createdAt;\n      this.createdBy = data.createdBy;\n      this.modifiedAt = data.modifiedAt;\n      this.modifiedBy = data.modifiedBy;\n      this.owner = data.Owner_AppUser_ID;\n      this.name = data.Name;\n      this.description = [data.Description_Line1, data.Description_Line2, data.Description_Line3];\n      this.logo = data.Logo_Type;\n      this.banner = data.Banner_Type || `${process.env.PUBLIC_URL}/assets/ngo-project-1.jpeg`;\n      this.pictures = data.Pictures;\n      this.countryCode = data.Country_code;\n      this.centroidLat = data.Centroid_Latitude;\n      this.centroidLon = data.Centroid_Longitude;\n      this.siteId = data.SiteOwnership_ID;\n      this.plantingArea = data.PlantingArea_m2;\n      this.plantingDensity = data.PlantingDensity_m2;\n      this.workerCount = data.WorkerCount;\n      this.certifierId = data.Certifier_AppUser_ID; \n      this.goalT = this.plantingArea / this.plantingDensity;\n      this.treeCost = 0;\n      this.boundaries = data.Boundaries || null;\n      this.ownerShip  = data.SiteOwnership ? data.SiteOwnership.Description || null : null\n      this.owner = data.Owner ? new AppUser(data.Owner.AppUser) || null : null;\n      this.analytics = data.Analytics ? new ProjectAnalytics(data.Analytics): null;\n  }\n}\n","\nimport {prefixNum} from \"@/helpers\";\n\nexport class ProjectAnalytics {\n  constructor(data = {}) {\n    this.id = data.ID;\n    this.owner = data.OWNER_APPUSER_ID;\n    this.latitude = data.CENTROID_LATITUDE || 0;\n    this.longitude = data.CENTROID_LONGITUDE || 0;\n    this.workerCount = data.WORKERCOUNT || 0;\n    this.certifierUserId = data.CERTIFIER_APPUSER_ID;\n    this.followerId = data.FOLLOWER_ID;\n    this.investorId = data.INVESTOR_ID;\n    this.plantingArea = data.PLANTINGAREA_M2 || 0;\n    this.plantingDensityM2 = data.PLANTINGDENSITY_M2 || 0;\n    this.sowCost =  data.SOWCOST? data.SOWCOST : 0;\n    this.conservationCost = data.CONSERVATIONCOST || 0;\n    this.blockAreaM2 = data.BLOCKAREA_M2 || 0;\n    this.totalBlockCapacity = data.TOTALBLOCKCAPACITY || 0;\n    this.blockPlantingCapacity = data.BLOCKPLANTINGCAPACITY || 0;\n    this.totalPlantingCapacity = data.TOTALPLANTINGCAPACITY || 0;\n    this.blockOffsetAverage = data.BLOCKOFFSETAVERAGE_TCO2E_YEAR || 0;\n    this.blockInitialCost = data.BLOCKINITIALCOST || 0;\n    this.blockupKeepCost = data.BLOCKUPKEEPCOST || 0;\n    this.createDate = data.CREATEDAT;\n    this.offsetAverageTCo2 = data.OFFSETAVERAGE_TCO2E_YEAR_TREE? data.OFFSETAVERAGE_TCO2E_YEAR_TREE : 0;\n    this.totalTreesPlanted = data.TOTALTREESPLANTED || 0;\n    this.totalOffsetExpectedTCo2 = data.TOTALOFFSETEXPECTED_TCO2E || 0;\n    this.totalBlocksPurchased = data.TOTALBLOCKSPURCHASED || 0;\n    this.totalGross = data.TOTALGROSS || 0;\n    this.totalNet = data.TOTALNET || 0;\n    this.followerCount = data.FOLLOWERCOUNT || 0;\n    this.investorCount = data.INVESTORCOUNT || 0;\n    this.co2AverageCost = (this.offsetAverageTCo2&&this.sowCost) ?((1 / this.offsetAverageTCo2) * this.sowCost) : 0;\n  }\n}\n","export class AppUser{\n  constructor(data = {}) {\n    this.id = data.ID;\n    this.name = data.DisplayName;\n    this.legalName = data.LegalName;\n    this.email = data.Email;\n    this.type = data.Type;\n    this.status = data.Status;\n    this.facebook = data.Facebook;\n    this.instagram = data.Instagram;\n    this.twitter = data.Twitter;\n    this.youtube = data.YouTube;\n    this.linkedIn = data.LinkedIn;\n    this.webpage = data.WebpageURL;\n    this.img = data.ProfileImage_Type || `${process.env.PUBLIC_URL}/assets/example-profile-img/profile.jpg`;\n    this.preferredCurrencyCode = data.PreferredCurrency_code;\n    this.preferredLanguageCode = data.PreferredLanguage_code;\n    this.taxId = data.TaxID;\n    this.taxAddress = data.TaxAddress_ID;\n    this.createdAt = data.createdAt;\n    this.createdBy = data.createdBy;\n    this.modifiedAt = data.modifiedAt;\n    this.modifiedBy = data.modifiedBy;\n  }\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { authenticationService } from \"@/services\";\n\nexport const PrivateRoute = ({ component: Component, roles, ...rest }) => (\n    <Route {...rest} render={props => {\n        const currentUser = authenticationService.currentUserValue;\n        if (!currentUser) {\n            // not logged in so redirect to login page with the return url\n            return <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n        }\n\n        // check if route is restricted by role\n        if (roles && roles.indexOf(currentUser.role) === -1) {\n            // role not authorised so redirect to home page\n            return <Redirect to={{ pathname: \"/dashboard\"}} />\n        }\n\n        // authorised so return component\n        return <Component {...props} />\n    }} />\n);","\n\nimport React, { useState } from \"react\"\nimport {Signup} from \"./\";\n\nexport const RegisterButton = React.memo(({scrollTop = 0}) => {\n\n    const [showS, setShowS] = useState(false);\n\tconst handleCloseS = () => setShowS(false);\n    const handleShowS = () => setShowS(true);\n\n    return (\n        <>\n            <button className={`fill-button ${scrollTop !== 0 ? \"scroll\" : \"\"}`} onClick={handleShowS}>PLANT NOW</button>\n            { showS ? <Signup showS={showS} handleCloseS={handleCloseS} handleShowS={handleShowS} /> : null}\n            {/* <Signup showS={showS} handleCloseS={handleCloseS} handleShowS={handleShowS} /> */}\n        </>\n    )\n});\n","\nimport \"@/scss/auth/index.scss\";\nimport { Modal, Form, InputGroup } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authenticationService } from \"@/services\";\nimport { useForm } from \"react-hook-form\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEyeSlash, faEye } from \"@fortawesome/free-solid-svg-icons\"\n\nexport const Signin = ({ handleClose, show }) => {\n\n    //const { data, loading } = useAuth({ id: 1 });\n\n    // userService.getAll().then((users) => {\n\n    //     console.log(users);\n\n    // });\n\n    //console.log(data);\n    const onClose = (e) => {\n        handleClose(e);\n    }\n\n    const initialState = { loading: false, isLoged: false, error: null };\n    const [loged, setLoged] = useState(initialState);\n    const history = useHistory();\n    const [viewPass, setViewPass] = useState(false);\n\n\n    const loginUser = (user) => {\n\n        setLoged({\n            ...initialState,\n            loading: true\n        });\n\n        authenticationService.login(user.username, user.password).then(\n            user => {\n                setLoged({\n                    ...loged,\n                    loading: false,\n                    isLoged: true,\n                });\n                setTimeout(() => {\n                    onClose();\n                    history.push('/dashboard');\n                }, 1000);\n            },\n            error => {\n                setLoged({\n                    ...loged,\n                    loading: false,\n                    isLoged: false,\n                    error: error\n                });\n\n                \n            }\n        );\n    }\n\n    const onSubmit = (user) => {\n        loginUser(user);\n    };\n\n    const { register, handleSubmit, formState: { errors } } = useForm({\n        mode: \"onChange\",\n        criteriaMode: \"firstError\",\n    });\n\n    return (\n\n        <Modal show={show} onHide={handleClose} centered=\"true\">\n            <Modal.Header closeButton>\n                <Modal.Title centered=\"true\">Login</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n                    <Form.Group className=\"mb-2\" controlId=\"loginUser\">\n                        <Form.Label>Username / Email address</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter email\" {...register(\"username\", {\n                            required: \"The username is required\",\n                        })}\n                            // isValid={touchedFields.email&&!errors.email}\n                            isInvalid={errors.username}\n                        />\n                        <Form.Text className={errors.username ? 'text-danger' : 'text-muted'}>\n                            {errors.username ? errors.username.message : 'Enter your username or email address.'}\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-2\" controlId=\"loginPass\">\n                        <Form.Label>Password</Form.Label> <InputGroup>\n                            <Form.Control type={viewPass ? \"text\" : \"password\"} placeholder=\"Password\" {...register(\"password\", {\n                                required: \"The password is required\"\n                            })}\n                                // isValid={touchedFields.email&&!errors.email}\n                                isInvalid={errors.password}\n                            />\n\n                            <InputGroup.Append>\n                                <div style={{ zIndex: \"100\", height: \"100%\", position: \"absolute\", right: \"2rem\", display: \"flex\", alignItems: \"center\" }}>\n                                    {!viewPass ?\n                                        <FontAwesomeIcon icon={faEyeSlash} onClick={() => setViewPass(!viewPass)} />\n                                        :\n                                        <FontAwesomeIcon icon={faEye} onClick={() => setViewPass(!viewPass)} />\n                                    }\n                                </div>\n                            </InputGroup.Append>\n                        </InputGroup>\n\n                        <Form.Text className=\"text-danger\">\n                            {errors.password && errors.password.message}\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-2 text-center\" controlId=\"formBasicCheckbox\">\n                        {/* <Form.Check type=\"checkbox\" label=\"Remember me!\" /> */}\n                        <a href=\"javascript(0)\" className=\"text-primary mt-2\">Do you forgot your password?</a>\n                    </Form.Group>\n\n                    {(!loged.isLoged && loged.error) &&\n                        <div className={`alert alert-danger text-center d-grid gap-2 mt-4`}>\n                            {loged.error}\n                        </div>\n                    }\n\n                    {(loged.isLoged && !loged.error) &&\n                        <div className={`alert alert-success texte-center d-grid gap-2 mt-4`}>\n                            Logged successfully.\n                        </div>\n                    }\n\n                    <div className=\"d-grid gap-2 mt-4\">\n                        <button type=\"submit\" className={`btn ${!loged.loading ? \"btn-success\" : \"btn-light\"} w-100`}>{!loged.loading ? \"Login\" : (<span className=\"text-muted\">Loading...</span>)}</button>\n                    </div>\n\n                </Form>\n            </Modal.Body>\n        </Modal>\n\n    )\n\n}","import { useEffect, useState, useCallback } from \"react\";\n\nexport const useScrollTop = () => {\n\n    const [scrollTop, setScrollTop] = useState(0);\n\n    const onLoad = useCallback((e) => {\n        const scroll = e.target.documentElement.scrollTop;\n        setScrollTop(scroll);\n    }, [setScrollTop]);\n\n    const onScroll = useCallback((e) => {\n        const scroll = e.target.documentElement.scrollTop;\n        setScrollTop(scroll);\n    }, [setScrollTop]);\n\n    useEffect(() => {\n        window.addEventListener(\"onload\", onLoad);\n        return () => window.removeEventListener(\"onload\", onLoad);\n    }, [onLoad]);\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", onScroll);\n        return () => window.removeEventListener(\"scroll\", onScroll);\n    }, [onScroll]);\n\n    return scrollTop;\n\n}\n","\nimport { useEffect, useState } from \"react\"\n\nexport const useWidth = () => {\n\n    const [bodyWidth, setBodyWidth] = useState(0);\n\n    useEffect(() => {\n        const body = document.querySelector(\"body\");\n        setBodyWidth(body.offsetWidth)\n    }, [])\n    \n    \n    useEffect(() => {\n\n        const onResize = () => { \n        const body = document.querySelector(\"body\");\n        setBodyWidth(body.offsetWidth)\n        }\n\n        window.addEventListener(\"resize\", onResize);\n        return () => window.removeEventListener(\"resize\", onResize);\n\n    }, [bodyWidth]);\n\n    return bodyWidth;\n\n}\n","import { useLocation } from \"react-router-dom\";\n\nexport const useQuery = (queryParam) => {  \n  const query = new URLSearchParams(useLocation().search)\n  return query.get(queryParam);\n};\n","import { useState, useEffect, useCallback } from 'react';\n\nexport const useOutsideFocus = (ref) => {\n  const [isOutside, setIsOutside] = useState(false);\n\n  const checkOutsideClick = useCallback((e) => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      setIsOutside(true);\n    } else {\n      setIsOutside(false);\n    }\n  }, [setIsOutside, ref]);\n\n  useEffect(() => {\n\n    document.addEventListener(\"click\", checkOutsideClick);\n    return () => document.removeEventListener(\"click\", checkOutsideClick);\n  }, [ref, checkOutsideClick]);\n\n  return isOutside;\n}","import \"@/scss/auth/index.scss\";\nimport { Modal, Col, Row, Tooltip } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport { useWidth, useFetch } from \"@/hooks\";\nimport { SignupInvestor, SignupNgo } from \"./\";\nimport { userService } from \"@/services\";\n\nexport const Signup = ({ ...props }) => {\n\n    // const url = `https://restcountries.eu/rest/v2/all?fields=name`;\n\n    // const {data} = useFetch(url); \n\n    \n    const [openSection, setOpenSection] = useState(\"ask\");\n    const [register, setRegister] = useState({ loading: false, registered: false, error: null });\n    const bodyWidth = useWidth();\n    const [click, setClick] = useState({section: \"investor\", click: 1}); \n    const [data, setData] = useState(null);\n\n    useEffect(() => {\n        userService.getCountries().then((countries) => {setData(countries)});\n    }, [])\n\n    const onClose = (e) => {\n        props.handleCloseS(e);\n        setTimeout(() => {\n            setOpenSection(\"ask\");\n        }, 500);\n    }\n\n    const saveUser = () => {\n        return new Promise((resolve,reject) => {\n        setRegister({\n            ...register,\n            loading: true\n        });\n        \n        setTimeout(() => {\n            setRegister({\n                ...register,\n                loading: false,\n                registered: true\n            });\n            resolve(\"regstrado\");\n        }, 2000);\n        }).then(()=>{\n            setTimeout(() => {\n            setRegister({\n                    ...register,\n                    loading: false,\n                    registered: false\n            });\n            onClose(true);\n            }, 1000);\n        });\n    }\n\n    \n\n    const chooseSection = (sectionVal) =>{\n        \n\n        if(bodyWidth < 720){\n\n            if(sectionVal !== click.section){\n                setClick({section: sectionVal, click: 1});\n            } else {\n                setClick({section: click.section, click: click.click + 1});\n\n                 if(click.click === 2){\n                    setOpenSection(click.section);\n                    setClick({...click, click: 1});\n                }\n                \n            }\n\n        } else {\n            setOpenSection(sectionVal);\n        }\n\n    }\n\n    return (\n        <>\n            <Modal show={props.showS} onHide={onClose} centered=\"true\">\n                <Modal.Header closeButton>\n                    {openSection !== \"ask\" &&\n                        <OverlayTrigger\n                            placement=\"top\"\n                            overlay={\n                                <Tooltip id=\"tooltip-top\">\n                                    Back\n                                </Tooltip>\n                            }\n                        >\n                            <button className=\"btn float-left pl-0\" onClick={() => setOpenSection(\"ask\")}><FontAwesomeIcon className=\"text-success back-icon\" icon={faArrowCircleLeft} />\n                            </button>\n                        </OverlayTrigger>\n                    }\n                    <Modal.Title centered=\"true\">{openSection === \"ask\" ? \"Choose the registration type\" : \"Register\"}</Modal.Title>\n\n                </Modal.Header>\n                <Modal.Body>\n                    {openSection === \"ask\" &&\n                        <>\n                            <Row>\n                                <Col onMouseEnter={bodyWidth > 720 ?() => { setClick({...click, section: \"investor\"}) }:undefined}>\n                                    <button className={`btn w-100 mb-4${click.section === \"investor\" ? \" btn-success\" : \" btn-light\"}`} onClick={() => chooseSection(\"investor\")}>\n                                        <span className={`${click.section !== \"investor\" ? \"text-muted\" : \"\"}`}>Investor</span>\n                                    </button>\n                                </Col>\n                                <Col onMouseEnter={bodyWidth > 720 ?() => { setClick({...click, section: \"ngo\"}) }:undefined}>\n                                    <button className={`btn w-100 mb-4${click.section === \"ngo\" ? \" btn-success\" : \" btn-light\"}`} onClick={() => chooseSection(\"ngo\")} >\n                                        <span className={`${click.section !== \"ngo\" ? \"text-muted\" : \"\"}`}>NGO</span>\n                                    </button>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    {click.section === \"investor\" &&\n                                        <p className=\"animate__animated animate__fadeIn\">\n                                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis ligula purus, ultrices eget tortor id, hendrerit pulvinar ipsum. Curabitur suscipit mauris in mollis sollicitudin. Donec facilisis elit finibus, hendrerit lorem non, sodales urna. Etiam porta venenatis libero, id bibendum lacus dictum sit amet. Etiam volutpat dui sed leo dignissim, sit amet ultrices turpis consequat.\n                                        </p>\n                                    }\n                                    {click.section === \"ngo\" &&\n                                        <p className=\"animate__animated animate__fadeIn\">\n                                            Sed gravida libero ac dolor varius, in euismod massa sagittis. Suspendisse commodo felis ut iaculis blandit. Pellentesque eget augue non erat mollis porta ac eget nunc. Cras et neque nunc. Proin a accumsan enim. Quisque blandit dui auctor dolor venenatis, nec feugiat mauris porta. Quisque ut luctus lacus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nulla et ipsum ultrices.\n                                        </p>\n                                    }\n                                </Col>\n\n                            </Row>\n                        </>\n\n                    }\n                    {openSection === \"investor\" &&\n                        <SignupInvestor/>\n                    }\n                    {openSection === \"ngo\" &&\n                       <SignupNgo data={data}/>\n                    }\n\n                    {register.registered && <div class=\"alert alert-success\">Successfully registered</div>}\n\n                </Modal.Body>\n        \n            </Modal>\n        </>\n    )\n\n}","import { Form, InputGroup } from \"react-bootstrap\";\nimport React, { useState } from \"react\"\nimport { useForm } from \"react-hook-form\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEyeSlash, faEye } from \"@fortawesome/free-solid-svg-icons\"\n\nexport const SignupInvestor = () => {\n\n    const { register, handleSubmit, getValues, formState: { errors } } = useForm({\n        mode: \"onChange\",\n        reValidateMode: \"onChange\",\n        criteriaMode: \"firstError\",\n    });\n    const onSubmit = (data) => alert(JSON.stringify(data));\n\n    const [viewPass, setViewPass] = useState(false);\n    const [viewConfirmPass, setViewConfirmPass] = useState(false);\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n            <Form.Group className=\"mb-2\" controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Enter your username\" {...register(\"username\", {\n                    required: \"The username is required\",\n                    minLength: {\n                        value: 3,\n                        message: \"The min length is 5 characters\"\n                    },\n                    maxLength: {\n                        value: 255,\n                        message: \"The max length is 255 characters\"\n                    },\n                })}\n                    // isValid={touchedFields.email&&!errors.email}\n                    isInvalid={errors.username}\n                />\n\n                <Form.Text className=\"text-danger\">\n                    {errors.username && errors.username.message}\n                </Form.Text>\n\n                <Form.Text className=\"text-muted\">\n\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-2\" controlId=\"email\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Enter email\" {...register(\"email\", {\n                    required: \"The email is required\",\n                    minLength: {\n                        value: 5,\n                        message: \"Invalid email\"\n                    },\n                    pattern: {\n                        value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\n                        message: \"Invalid email\" // JS only: <p>error message</p> TS only support string\n                    }\n                })}\n                    // isValid={touchedFields.email&&!errors.email}\n                    isInvalid={errors.email}\n                />\n                <Form.Text className={errors.email ? `text-danger` : `text-muted`}>\n                    {errors.email ? `${errors.email.message}` : `We\"ll never share your email with anyone else.`}\n                </Form.Text>\n            </Form.Group>\n\n\n\n            <Form.Group className=\"mb-2\" controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <InputGroup>\n                    <Form.Control type={viewPass?\"text\":\"password\"}  placeholder=\"Password\" {...register(\"password\", {\n                        required: \"The password is required\",\n                        minLength: {\n                            value: 8,\n                            message: \"The min length password is 8 characters\"\n                        },\n                        maxLength: {\n                            value: 64,\n                            message: \"The max length password is 64 characters\"\n                        },\n                        pattern: {\n                            value: /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-])/,\n                            message: \"The passwors must contain a least: 1 upper case, 1 lower case, 1 number and 1 special character\" // JS only: <p>error message</p> TS only support string\n                        }\n                    })}\n                        // isValid={touchedFields.email&&!errors.email}\n                        isInvalid={errors.password}\n                    />\n\n                    <InputGroup.Append>\n                        <div style={{ zIndex: \"100\", height: \"100%\", position: \"absolute\", right: \"2rem\", display: \"flex\", alignItems: \"center\" }}>\n                            {!viewPass ? \n                            <FontAwesomeIcon icon={faEyeSlash} onClick={() => setViewPass(!viewPass)}/>\n                            :\n                            <FontAwesomeIcon icon={faEye} onClick={() => setViewPass(!viewPass)}/>\n                            }\n                        </div>\n                    </InputGroup.Append>\n                </InputGroup>\n\n                <Form.Text className=\"text-danger\">\n                    {errors.password && errors.password.message}\n                </Form.Text>\n            </Form.Group>\n            <Form.Group className=\"mb-2\" controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <InputGroup>\n                    <Form.Control type={viewConfirmPass?\"text\":\"password\"} placeholder=\"Confirm Password\" {...register(\"confirmPassword\", {\n                        required: \"The confirm password is required\",\n                        validate: value => value === getValues(\"password\") || \"The password will be the same\"\n                    })}\n                        // isValid={touchedFields.email&&!errors.email}\n                        isInvalid={errors.confirmPassword}\n                    />\n                    <InputGroup.Append>\n                        <div style={{ zIndex: \"100\", height: \"100%\", position: \"absolute\", right: \"2rem\", display: \"flex\", alignItems: \"center\" }}>\n                            {!viewConfirmPass ? \n                            <FontAwesomeIcon icon={faEyeSlash} onClick={() => setViewConfirmPass(!viewConfirmPass)}/>\n                            :\n                            <FontAwesomeIcon icon={faEye} onClick={() => setViewConfirmPass(!viewConfirmPass)}/>\n                            }\n                        </div>\n                    </InputGroup.Append>\n                </InputGroup>\n\n                <Form.Text className=\"text-danger\">\n                    {errors.confirmPassword && errors.confirmPassword.message}\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-2\" controlId=\"check\">\n                <Form.Check type=\"checkbox\" label=\"I accept the Terms of Use & Privacy Policy\" {...register(\"check\", {\n                    required: \"You need to check this\"\n                })} />\n                <Form.Text className=\"text-danger\">\n                    {errors.check && errors.check.message}\n                </Form.Text>\n            </Form.Group>\n\n            <div className=\"d-grid gap-2 mt-4\">\n                <button type=\"submit\" className={`btn ${!register.loading ? \"btn-success\" : \"btn-light\"} w-100`}> Register </button>\n            </div>\n        </Form>\n    )\n}\n","import React, { useState } from \"react\"\nimport { Form, Col, Row, InputGroup, OverlayTrigger, Popover } from \"react-bootstrap\";\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useForm } from \"react-hook-form\";\nimport { faEyeSlash, faEye } from \"@fortawesome/free-solid-svg-icons\"\n\n\nexport const SignupNgo = ({ data }) => {\n    // const [register, setRegister] = useState({ loading: false, registered: false, error: null });\n\n    // console.log(data);\n\n    // const saveUser = () => {\n    //     return new Promise((resolve,reject) => {\n    //     setRegister({\n    //         ...register,\n    //         loading: true\n    //     });\n\n    //     setTimeout(() => {\n    //         setRegister({\n    //             ...register,\n    //             loading: false,\n    //             registered: true\n    //         });\n    //         resolve(\"regstrado\");\n    //     }, 2000);\n    //     }).then(()=>{\n    //         console.log(\"no entro\")\n    //         setTimeout(() => {\n    //         setRegister({\n    //                 ...register,\n    //                 loading: false,\n    //                 registered: false\n    //         });\n    //         }, 1000);\n    //     });\n    // }\n\n    const { register, handleSubmit, getValues, formState: { errors } } = useForm({\n        mode: \"onChange\",\n        reValidateMode: \"onChange\",\n        criteriaMode: \"firstError\",\n    });\n    const onSubmit = (data) => alert(JSON.stringify(data));\n\n    const [viewPass, setViewPass] = useState(false);\n    const [viewConfirmPass, setViewConfirmPass] = useState(false);\n\n    return (\n        <Form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\n            <Form.Group className=\"mb-2\" controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control autoComplete=\"off\" type=\"text\" placeholder=\"Enter your username\" {...register(\"username\", {\n                    required: \"The username is required\",\n                    minLength: {\n                        value: 3,\n                        message: \"The min length is 5 characters\"\n                    },\n                    maxLength: {\n                        value: 255,\n                        message: \"The max length is 255 characters\"\n                    },\n                })}\n                    // isValid={touchedFields.email&&!errors.email}\n                    isInvalid={errors.username}\n                />\n\n                <Form.Text className=\"text-danger\">\n                    {errors.username && errors.username.message}\n                </Form.Text>\n\n                <Form.Text className=\"text-muted\">\n\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-2\" controlId=\"email\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Enter email\" {...register(\"email\", {\n                    required: \"The email is required\",\n                    minLength: {\n                        value: 5,\n                        message: \"Invalid email\"\n                    },\n                    pattern: {\n                        value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\n                        message: \"Invalid email\" // JS only: <p>error message</p> TS only support string\n                    }\n                })}\n                    // isValid={touchedFields.email&&!errors.email}\n                    isInvalid={errors.email}\n                />\n                <Form.Text className={errors.email ? `text-danger` : `text-muted`}>\n                    {errors.email ? `${errors.email.message}` : `We\"ll never share your email with anyone else.`}\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-2\" controlId=\"country\">\n                <Row>\n                    <Col>\n                        <Form.Label>Country</Form.Label>\n                        <Form.Control\n                            as=\"select\"\n                            {...register(\"country\", {\n                                validate: value => value !== \"1\" || \"The country is required\"\n                            })}\n                            // isValid={touchedFields.email&&!errors.email}\n                            isInvalid={errors.country}\n                        >\n                            <option value=\"1\">Select your country</option>\n                            {data && data.map((element, i) => (\n                                <option key={i} value={element.name}>{element.name}</option>\n                            )\n                            )}\n                        </Form.Control>\n                        <Form.Text className=\"text-danger\">\n                            {errors.country && errors.country.message}\n                        </Form.Text>\n                    </Col>\n                    <Col>\n                        <Form.Label>Registration id</Form.Label>\n\n                        <OverlayTrigger trigger=\"hover\" placement=\"top\" overlay={\n                            <Popover id=\"popover-basic\">\n                                <Popover.Title as=\"h3\">Registration id</Popover.Title>\n                                <Popover.Content>\n                                    The <strong>Registration id</strong> is... ed gravida libero ac dolor varius, in euismod massa sagittis. Suspendisse commodo felis ut iaculis blandit. Pellentesque eget augue non erat mollis porta ac eget nunc. Cras et neque nunc. Proin a accumsan enim. Quisque bla\n                                </Popover.Content>\n                            </Popover>\n                        }>\n                            <FontAwesomeIcon icon={faInfoCircle} className=\"icon pl-2 pt-1 fa-w-20 info-icon text-success\" />\n                        </OverlayTrigger>\n\n                        <Form.Control type=\"text\" {...register(\"registrationId\", { required: \"Registration id is required\" })}\n                            isInvalid={errors.registrationId}\n                        />\n                        <Form.Text className=\"text-danger\">\n                            {errors.registrationId && errors.registrationId.message}\n                        </Form.Text>\n                    </Col>\n                </Row>\n            </Form.Group>\n\n            <Form.Group className=\"mb-2\" controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <InputGroup>\n                    <Form.Control type={viewPass?\"text\":\"password\"}  placeholder=\"Password\" {...register(\"password\", {\n                        required: \"The password is required\",\n                        minLength: {\n                            value: 8,\n                            message: \"The min length password is 8 characters\"\n                        },\n                        maxLength: {\n                            value: 64,\n                            message: \"The max length password is 64 characters\"\n                        },\n                        pattern: {\n                            value: /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-])/,\n                            message: \"The passwors must contain a least: 1 upper case, 1 lower case, 1 number and 1 special character\" // JS only: <p>error message</p> TS only support string\n                        }\n                    })}\n                        // isValid={touchedFields.email&&!errors.email}\n                        isInvalid={errors.password}\n                    />\n\n                    <InputGroup.Append>\n                        <div style={{ zIndex: \"100\", height: \"100%\", position: \"absolute\", right: \"2rem\", display: \"flex\", alignItems: \"center\" }}>\n                            {!viewPass ? \n                            <FontAwesomeIcon icon={faEyeSlash} onClick={() => setViewPass(!viewPass)}/>\n                            :\n                            <FontAwesomeIcon icon={faEye} onClick={() => setViewPass(!viewPass)}/>\n                            }\n                        </div>\n                    </InputGroup.Append>\n                </InputGroup>\n\n                <Form.Text className=\"text-danger\">\n                    {errors.password && errors.password.message}\n                </Form.Text>\n            </Form.Group>\n            <Form.Group className=\"mb-2\" controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <InputGroup>\n                    <Form.Control type={viewConfirmPass?\"text\":\"password\"} placeholder=\"Confirm Password\" {...register(\"confirmPassword\", {\n                        required: \"The confirm password is required\",\n                        validate: value => value === getValues(\"password\") || \"The password will be the same\"\n                    })}\n                        // isValid={touchedFields.email&&!errors.email}\n                        isInvalid={errors.confirmPassword}\n                    />\n                    <InputGroup.Append>\n                        <div style={{ zIndex: \"100\", height: \"100%\", position: \"absolute\", right: \"2rem\", display: \"flex\", alignItems: \"center\" }}>\n                            {!viewConfirmPass ? \n                            <FontAwesomeIcon icon={faEyeSlash} onClick={() => setViewConfirmPass(!viewConfirmPass)}/>\n                            :\n                            <FontAwesomeIcon icon={faEye} onClick={() => setViewConfirmPass(!viewConfirmPass)}/>\n                            }\n                        </div>\n                    </InputGroup.Append>\n                </InputGroup>\n\n                <Form.Text className=\"text-danger\">\n                    {errors.confirmPassword && errors.confirmPassword.message}\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-2\" controlId=\"check\">\n                <Form.Check type=\"checkbox\" label=\"I accept the Terms of Use & Privacy Policy\" {...register(\"check\", {\n                    required: \"You need to check this\"\n                })} />\n                <Form.Text className=\"text-danger\">\n                    {errors.check && errors.check.message}\n                </Form.Text>\n            </Form.Group>\n\n            <div className=\"d-grid gap-2 mt-4\">\n                <button type=\"submit\" className={`btn ${!register.loading ? \"btn-success\" : \"btn-light\"} w-100`}> Register </button>\n            </div>\n        </Form>\n    )\n}\n","\nimport { useState, memo} from \"react\";\nimport useMeasure from \"react-use-measure\";\nimport { Signin, RegisterButton } from \"@/pages/auth\";\nimport { useScrollTop } from \"@/hooks\";\nimport { useLocation } from \"react-router-dom\";\nimport { authenticationService } from \"@/services\";\nimport { useHistory } from \"react-router\";\nimport { NavMenu, SearchBar, UserMenu } from \"./\";\n\nexport const Navbar = () => {\n\n\tconst currentUser = authenticationService.currentUserValue;\n\tconst [ref, bounds] = useMeasure();\n    const scrollTop = useScrollTop();\n\n\tconst history = useHistory();\n\n\tconst [show, setShow] = useState(false);\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\n\tconst logout = () => {\n\t\tauthenticationService.logout();\n\t\thistory.push('/');\n\t}\n\n\tconst { pathname: page } = useLocation();\n\n\treturn (\n\t\t<nav ref={ref} className={`gs-navbar${page === \"/\" ? scrollTop !== 0 ? \" scroll\" : \"\" : \"\"}${page !== \"/\" ? \" page\" : \"\"}`}>\n\t\t\t<NavMenu scrollTop={scrollTop}/>\n\t\t\t{page === \"/marketplace\" && <SearchBar/>}\n\n\t\t\t<div className={`navbar-menu ${page !== \"/\" && scrollTop !== 0 ? \"scroll\" : \"\"}`}>\n\t\t\t\t{!currentUser &&\n\t\t\t\t\t<>\n\t\t\t\t\t\t<RegisterButton scrollTop={scrollTop} />\n\t\t\t\t\t\t<button className={`${page !== '/' ? 'ml-4 fill-button' : 'unfill-button'} ${scrollTop !== 0 ? \"scroll\" : \"\"}`} onClick={handleShow}>LOGIN</button>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t\t{currentUser && <UserMenu user={currentUser} onLogOut={logout}/>}\n\t\t\t</div>\n\t\t\t{ show ? <Signin show={show} handleClose={handleClose} handleShow={handleShow} /> : null}\n\t\t</nav >\n\t);\n};\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFacebookSquare, faTwitterSquare, faInstagramSquare } from \"@fortawesome/free-brands-svg-icons\"\nimport { useLocation } from \"react-router-dom\";\n\nexport const Footer = () => {\n    const { pathname: page } = useLocation();\n    const today = new Date();\n    return (\n        <footer className={`${page !== \"/\" ? \"dashboard\" : \"\"}`}>\n            <div className={`footer-bar`}>\n                <div className=\"social-buttons\">\n                    <div className=\"icons\">\n                        <FontAwesomeIcon icon={faFacebookSquare} className=\"icon\" />\n                        <FontAwesomeIcon icon={faTwitterSquare} className=\"icon\" />\n                        <FontAwesomeIcon icon={faInstagramSquare} className=\"icon\" />\n                    </div>\n                </div>\n                <div className=\"links\">\n                    <p>Copyright &copy; {today.getFullYear()} / Sitemap / Terms of Use / Privacy Policy / FAQ / Contact - \"Powered by SAP\"</p>\n                </div>\n            </div>\n        </footer>\n    );\n};\n\n","import React, { useEffect, useState } from \"react\"\nimport { Loader } from \"./\";\nimport \"@/scss/Modules.scss\";\n\nexport const LoadContent = ({ children }) => {\n\n    const [isLoaded, setisLoaded] = useState(false);\n\n    useEffect(() => {\n        setTimeout(() => {\n            setisLoaded(true)\n        }, 1000);\n    }, [])\n\n    return (\n        <>\n            {!isLoaded ? (<Loader />) :(<>{children}</>)}\n        </>\n    )\n}\n","import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nexport const Loader = () => {\n    return (\n        <div className=\"loader animate__fadeOut\">\n            <p className=\"logo\">GREEN SAP</p>\n            <Spinner className=\"spinner\"/>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useRef, memo } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { useOutsideFocus, useQuery } from \"@/hooks\";\n\nexport const SearchBar = memo(() => {\n    console.log(\"Aqui\");\n    const [search, setSearch] = useState('');\n    const [searchHistory, setSearchHistory] = useState([]);\n    const [toggleList, setToggleList] = useState(false);\n    const ref = useRef(null);\n    const isOutside = useOutsideFocus(ref);\n    const history = useHistory();\n    const query = useQuery('search');\n\n    useEffect(() => {\n        const history = window.localStorage.getItem('search_history');\n        if (history !== null) {\n            setSearchHistory(JSON.parse(history));\n        }\n    }, []);\n\n    useEffect(() => {\n        setSearch(query);\n    }, [query]);\n\n    useEffect(() => {\n    if (isOutside && toggleList) {\n        setToggleList(false);\n    }\n  }, [isOutside]);\n\n    const onSearch = () => {\n        if (!searchHistory.includes(search)) {\n            const newSearchHistory = [search].concat(searchHistory);\n            if (newSearchHistory.length > 5) {\n                newSearchHistory.pop();\n            }\n            window.localStorage.setItem('search_history', JSON.stringify(newSearchHistory));\n            setSearchHistory(newSearchHistory);\n        }\n        history.push(`/marketplace?search=${search}`);\n    };\n\n    const onEnter = (e) => {\n        if (e.charCode === 13) {\n            onSearch();\n            setToggleList(false);\n        }\n    };\n\n    const onDelete = (pos) => {\n        const newSearchHistory = searchHistory.filter((item, i) => pos !== i);\n        window.localStorage.setItem('search_history', JSON.stringify(newSearchHistory));\n        setSearchHistory(newSearchHistory);\n    };\n\n    return (\n        <div className=\"search\">\n            <input\n                ref={ref}\n                className={`search-input ${toggleList ? 'focused' : ''}`}\n                placeholder=\"Search a project...\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n                onFocus={() => setToggleList(true)}\n                onKeyPress={onEnter}\n            />\n            <FontAwesomeIcon className=\"search-icon\" icon={faSearch} onClick={onSearch} />\n\n            {toggleList && searchHistory.length > 0 && (\n                <ul className=\"search-list\">\n                    {searchHistory.map((item, i) => (\n                        <li key={i} className=\"search-option\">\n                            <p style={{ padding: '10px 10px', width: '100%' }} onClick={() => history.push(`/marketplace?search=${item}`)}>\n                                {item}\n                            </p>\n                            <FontAwesomeIcon icon={faTimes} size=\"1x\" onClick={() => onDelete(i)} />\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    )\n});\n","import { useState, useEffect, useRef, memo } from 'react';\nimport { animated, config, useSpring, useTrail } from \"react-spring\";\nimport { Link, NavLink, useLocation } from \"react-router-dom\";\nimport { useOutsideFocus } from \"@/hooks\";\n\nexport const NavMenu = memo(({scrollTop}) => {\n\n  const menu = [\n    { text: \"Dashboard\", link: \"/dashboard\", type: \"NGO\" },\n    { text: \"Project Marketplace\", link: \"/marketplace\" },\n    { text: \"Leaderboard\", link: \"/leaderboard\", type: \"NGO\" }\n  ];\n  const [show, setShow] = useState(false);\n  const ref = useRef(null);\n  const isOutside = useOutsideFocus(ref);\n  const { pathname } = useLocation();\n  const [menuStyles, menuController] = useSpring(() => ({ width: '0rem', backgroundColor: \"rgba(1, 20, 2, 0)\" }));\n  const [itemsStyles, itemsController] = useTrail(menu.length, () => ({transform: \"translateX(-100%)\", opacity: 0}));\n\n  useEffect(() => {\n    if (isOutside && show) {\n      onOpen();\n    }\n  }, [isOutside]);\n\n  const onOpen = () => {\n    if (show) {\n      menuController.start({ width: '0rem', backgroundColor: \"rgba(1, 20, 2, 0.0)\", delay: 300, config: config.stiff });\n      itemsController.start({transform: \"translateX(-100%)\", opacity: 0, config: config.stiff});\n    } else {\n      menuController.start({ width: '20rem', backgroundColor: \"rgba(1, 20, 2, 0.6)\", config: config.stiff });\n      itemsController.start({transform: \"translateX(0%)\", opacity: 1, delay: 300, config: config.stiff});\n    }\n    setShow(!show);\n  };\n\n  return (\n    <div className=\"navbar-aside\">\n      <div ref={ref} className=\"gs-menu-btn\" onClick={onOpen}>\n        <div className={`menu-btn__burger ${show ? \"open\": \"\"}`}/>\n      </div>\n      <animated.div className=\"menu-nav landing\" style={menuStyles}>\n        <ul className=\"nav\">\n          {menu.map((item, i) => (\n            <animated.li key={i} style={itemsStyles[i]} className=\"nav-item\">\n              <NavLink className=\"nav-link-gs\" to={`${item.link}`}>\n                {item.text}\n              </NavLink>\n            </animated.li>\n          ))}\n        </ul>\n      </animated.div>\n      <p><Link to=\"/\" className={`nav-link-gs nav-brand ${pathname === \"/\" ? scrollTop !== 0 ? \" scroll\" : \"\" : \"\"}${pathname !== \"/\" ? \" page\" : \"\"}`}>GREEN SAP</Link></p>\n\t\t\t<p><Link to=\"/\" className={`nav-link-gs nav-brand-m pl-2 ${pathname !== \"/\" ? \" page\" : \"\"}`}>G</Link></p>\n    </div>\n  );\n});","import { useState, useEffect, useRef } from 'react';\nimport { animated, config, useSpring, useTrail } from \"react-spring\";\nimport { useHistory } from \"react-router-dom\";\nimport { useOutsideFocus } from \"@/hooks\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretDown, faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const UserMenu = ({user, onLogOut}) => {\n  const menu = [\n    { text: \"Account\", link: \"/account\"},\n    { text: \"Log Out\", link: null },\n  ];\n  const [show, setShow] = useState(false);\n  const ref = useRef(null);\n  const isOutside = useOutsideFocus(ref);\n  const history = useHistory();\n  const [menuStyles, menuController] = useSpring(() => ({ width: '0rem', backgroundColor: \"rgba(255, 255, 255, 0)\" }));\n  const [itemsStyles, itemsController] = useTrail(menu.length, () => ({transform: \"translateX(100%)\", opacity: 0}));\n\n  useEffect(() => {\n    if (isOutside && show) {\n      onOpen();\n    }\n  }, [isOutside]);\n\n  const onOpen = () => {\n    if (show) {\n      menuController.start({ width: '0rem', backgroundColor: \"rgba(255, 255, 255, 0)\", delay: 300, config: config.stiff });\n      itemsController.start({transform: \"translateX(100%)\", opacity: 0, config: config.stiff});\n    } else {\n      menuController.start({ width: '20rem', backgroundColor: \"rgba(255, 255, 255, 1)\", config: config.stiff });\n      itemsController.start({transform: \"translateX(0%)\", opacity: 1, delay: 300, config: config.stiff});\n    }\n    setShow(!show);\n  };\n\n  const onRedirect = (path) => {\n    console.log(path);\n    if (path === null) {\n      onLogOut();\n    } else {\n      history.push(path);\n    }\n  };\n\n  return (\n    <div className=\"user-menu\">\n      <img className=\"profile-img\" src={user.img} alt=\"Profile\" />\n      <button ref={ref} className=\"btn btn-gray\" onClick={onOpen}>\n        <FontAwesomeIcon icon={show ? faCaretDown : faCaretUp} className=\"option-icon\" />\n      </button>\n      <animated.div className=\"menu-nav page\" style={menuStyles}>\n        <ul className=\"nav page\">\n          {menu.map((item, i) => (\n            <animated.li key={i} className=\"nav-item page\" style={itemsStyles[i]} onClick={() => onRedirect(item.link)}>\n              <p>{item.text}</p>\n            </animated.li>\n          ))}\n\t\t\t\t</ul>\n\t\t\t</animated.div>\n    </div>\n  );\n};","export default __webpack_public_path__ + \"static/media/tree.8135674b.png\";","import Tree from \"../../assets/tree.png\";\nimport useMeasure from \"react-use-measure\";\nimport { animated, useSpring, config } from \"react-spring\";\nimport { useEffect } from \"react\";\nimport { useScrollTop } from \"@/hooks\";\n\nexport const About = () => {\n\n    const [ref, bounds] = useMeasure();\n\n    const scrollTop = useScrollTop();\n\n    const [animationTitle, setAnimationTitle] = useSpring(() => ({\n        from: { opacity: 0 },\n        config: config.slow,\n        delay: 100\n    }))\n\n    const [animation, setAnimation] = useSpring(() => ({\n        from: { opacity: 0, transform: \"translateY(10%)\" },\n        config: config.slow,\n        delay: 100\n    }))\n\n    useEffect(() => {\n        const { top } = bounds;\n\n        if (top > 0 && scrollTop > top - 400) {\n            setAnimationTitle.start(\n                { opacity: 1 }\n            )\n\n            setAnimation.start(\n                { opacity: 1, transform: \"translateY(0%)\" }\n            )\n        }\n\n    }, [bounds, scrollTop, setAnimation, setAnimationTitle]);\n\n\n    return (\n\n        <section className=\"about\" ref={ref} >\n            <h1>What is it?</h1>\n            <animated.div style={animation} className=\"about-card\">\n                <div className=\"about-text\">\n                    <div className=\"text\">\n                        <p>As an organization, we are dedicated to boost confidence and visibility of reforestation projects by granting financial traceability and\n                            transparency to the donation process, generating increased funding for those initiatives and reducing the excessive costs involved in\n                            the organic certification process preceding taxation benefits. Using SAP technology embedded with carbon compensation and remote satellite\n                            imaging, we reach our main goal: create a healthier climate and monitor reforestation progress. GreenSAP was born to empower everyone to\n                            hold NGOs and be part of a greener future, while providing, at the same time,visibility and recognition to the process. Investing in a\n                            greener future has never been so easy, track your progress by planting with us!</p>\n                    </div>\n                    <img src={Tree} alt=\"Tree Vector\" />\n                </div>\n            </animated.div>\n        </section>\n    );\n};\n","import \"@/scss/components/Count.scss\";\nimport { animated, useSpring, config } from \"react-spring\";\n\nexport const Count = ({ ...props }) => {\n\n\tconst [numSpring] = useSpring(() => ({\n\t\tfrom: { value: 0 },\n\t\tvalue: props.number,\n\t\tdelay: props.delay,\n\t\tconfig: config.slow\n\t}));\n\n\treturn (\n\t\t<animated.div style={props.animated} className={`count ${props.open ? \"open\" : \"\"}`}>\n\t\t\t<animated.h3 className=\"count-number\">\n\t\t\t\t{numSpring.value.to(n => parseInt(n).toLocaleString(\"EN-us\"))}\n\t\t\t</animated.h3>\n\t\t\t<p className=\"count-text\">{props.text}</p>\n\t\t</animated.div>\n\t);\n};","import {Count} from \"./\";\nimport { animated, config, useSpring, useTrail } from \"react-spring\";\nimport { RegisterButton } from \"@/pages/auth\";\nimport  {projectsService} from \"@/services/projects.service\";\n\n\nexport const Header = () => {\n\n\tconst [animation] = useSpring(() => ({\n\t\tfrom: { value: 0, opacity: 0, transform: \"translateY(-20%)\" },\n\t\tdelay: 500,\n\t\topacity: 1,\n\t\ttransform: \"translateY(0%)\",\n\t\tconfig: config.slow\n\t}));\n\n\tconst titles = [{ num: 1334034, title: \"planted trees\", delay: 700 }, { num: 4590, title: \"projects\", delay: 1400 }, { num: 654, title: \"investors\", delay: 2100 }];\n\n\tconst [countSpring] = useTrail(titles.length, () => ({\n\t\tfrom: { value: 0, opacity: 0, transform: \"translateY(-0%)\" },\n\t\tdelay: 300,\n\t\topacity: 1,\n\t\ttransform: \"translateY(30%)\",\n\t\tconfig: config.stiff\n\t}));\n\n\treturn (\n\t\t<header className={`masthead`}>\n\t\t\t<animated.div style={animation} >\n\t\t\t\t<h1 className=\"masthead-title\">\n\t\t\t\t\t<span className=\"title1\">PLANT TREES</span>\n\t\t\t\t</h1>\n\n\t\t\t\t<h1 className=\"masthead-title\">\n\t\t\t\t\t<span className=\"title2\">TRACK YOUR INVESTMENT </span>\n\t\t\t\t</h1>\n\n\t\t\t\t<div className=\"masthead-subtitle\">\n\t\t\t\t\t<h2 className=\"masthead-description\">\n\t\t\t\t\t\tAs an organization our goal is to turn your donations into invesments.\n\t\t\t\t\t</h2>\n\t\t\t\t\t<h2 className=\"masthead-description\">Through the powers of blockchain, satellite imaging and IoT, everyone can track their own donations from the wallet to the tree.\n\t\t\t\t\t\tInvesting in a greener future has never been so easy.\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"masthead-button\">\n\t\t\t\t\t<RegisterButton/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"counters\">\n\t\t\t\t\t{countSpring && countSpring.map((element, index) => (\n\t\t\t\t\t\t<Count key={titles[index].title} animated={element} delay={titles[index].delay} number={titles[index].num} text={titles[index].title} />\n\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</animated.div>\n\t\t</header>\n\t);\n};","import { cards } from \"@/helpers\";\nimport useMeasure from \"react-use-measure\";\nimport { animated, useSpring, useTrail, config, useSpringRef, useChain } from \"react-spring\";\nimport { useEffect, useState } from \"react\";\nimport { useScrollTop } from \"@/hooks\";\nimport { memo } from \"react\";\n\nexport const HowItWorks = memo(() => {\n\n    const [open, setOpen] = useState(false);\n    const [ref, bounds] = useMeasure();\n    const scrollTop = useScrollTop();\n    const animationRef = useSpringRef()\n    const animation = useSpring({\n        ref: animationRef,\n        config: config.slow,\n        delay: 100,\n        opacity: open ? 1 : 0,\n        transform: open ? \"translateY(0%)\" : \"translateY(-10%)\",\n\n    })\n\n    const cardRef = useSpringRef()\n    const cardAnimation = useTrail(cards.length, {\n        ref: cardRef,\n        from: { opacity: 0, transform: \"translateY(10%)\" },\n        opacity: open ? 1 : 0,\n        transform: open ? \"translateY(0%)\" : \"translateY(10%)\",\n        config: config.slow,\n        delay: 100,\n\n    });\n\n    useChain([animationRef, cardRef], [0, 0.5]);\n\n\n\n    useEffect(() => {\n        const { top: topSection } = bounds;\n        if (!open && topSection > 0 && scrollTop > topSection - 750) {\n            setOpen(true);\n        }\n\n        return ()=>{\n\n        }\n    }, [bounds, open, scrollTop]);\n\n\n    return (\n\n        <div className=\"how\">\n\n            < h1 className=\"title\"> How it works?</h1 >\n            <animated.section  ref={ref} style={animation}>\n\n\n\n                <div className=\"cards\">\n\n                    {cardAnimation && cardAnimation.map(({ ...style }, index, array) =>\n                    (\n                        <animated.div key={cards[index].step} style={style} className=\"card\">\n\n                            <h2>{cards[index].step}</h2>\n\n                            <div className=\"card-content\">\n                                <div className=\"card-text\">\n                                    <p>\n                                        {cards[index].description}\n                                    </p>\n\n                                </div>\n                                <div className=\"card-image\">\n                                    <img src={cards[index].image} alt={cards[index].step}></img>\n                                </div>\n                            </div>\n\n                        </animated.div>\n                    )\n\n                    )}\n                </div>\n\n            </animated.section>\n        </div>\n\n    );\n});\n","import { investorImages } from \"@/helpers\";\nimport Slider from \"react-slick\";\n\n\n\n\nexport const Investors = () => {\n\n    const investors = investorImages();\n\n    const settings = {\n        dots: false,\n        infinite: true,\n        slidesToShow: 4,\n        slidesToScroll: 1,\n        autoplay: true,\n        speed: 2500,\n        autoplaySpeed: 2000,\n        cssEase: \"linear\"\n    };\n\n    return (\n\n        <section className=\"investors\">\n            <h1>Our investors</h1>\n            <div className=\"investors-images\">\n                <Slider {...settings}>\n                    {investors.map((element, index) => (\n                        <div className=\"image\" key={index}>\n\n                            <img  className=\"picture\" src={element.url} alt={element.name}  />\n                        </div>\n\n                    ))}\n                </Slider>\n            </div>\n        </section>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/river-across-trees.1ae385b8.mp4\";","import \"@/scss/landing-page/index.scss\";\nimport React, { useEffect, useState } from \"react\";\nimport { Header, About, HowItWorks, Investors } from \"./\";\nimport RiverTrees from \"@/assets/river-across-trees.mp4\";\nimport { Loader } from \"@/pages/general\";\n\nexport const LandingPage = () => {\n\n\n    const [isLoaded, setIsLoaded] = useState(false);\n\n    useEffect(() => {\n        // setTimeout(() => {\n        //     setIsLoaded(true)\n        // }, 2000);\n    }, [])\n\n    return (\n        <>\n            <video width='100%' autoPlay muted loop \n            onLoadStart={() => {\n                console.log('...I am loading...')\n                setIsLoaded(false);\n            }}\n            onLoadedData={() => {\n                console.log('...I am loadedcac...')\n                setIsLoaded(true);\n            }}>\n                <source src={RiverTrees} type=\"video/mp4\"></source>\n            </video>\n\n            <div style={{\n                background: \"linear-gradient(180deg, rgb(14 156 104 / 22%) 0%, rgb(2 4 4 / 83%) 100%)\",\n                position: \"fixed\",\n                width: \"100%\",\n                height: \"100%\",\n                zIndex: -100\n            }}>\n            </div>\n            {\n                !isLoaded ? (<Loader />) :\n                    (<>\n                        <Header />\n                        <About />\n                        <HowItWorks />\n                        <Investors />\n                    </>\n                    )\n            }\n        </>\n    )\n}","\nimport \"@/scss/dashboard/index.scss\";\nimport { Sumary, Analytics, Main } from \"./\";\nimport React, { useEffect, useState } from \"react\";\nimport { LoadContent } from \"@/pages/general\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport {useQuery} from \"@/hooks\";\nimport { dashboardService } from \"../../services\";\n\nexport const Dashboard = () => {\n    const [user, setUser] = useState(null);\n    const history = useHistory();\n    const { pathname } = useLocation();\n    const id = useQuery(\"id\");\n    const isDashboard = pathname === '/dashboard';\n    \n    useEffect(() => {\n        dashboardService.getUser(isDashboard, id)\n            .then(user => setUser(user))\n            .catch(err => history.push('/'));\n    }, []);\n\n    return (\n        <LoadContent>\n            {user &&\n                <div className=\"content dashboard\">\n                    <div className=\"main-content\">\n                        <Main user={user} />\n                        <Sumary user={user} isDashboard={isDashboard} />\n                        <Analytics user={user} />\n                    </div>\n                </div>\n            }\n        </LoadContent>\n    )\n}\n","import { animated, useSpring, config } from \"react-spring\";\nimport useMeasure from \"react-use-measure\";\nimport { prefixNum } from \"@/helpers/prefixNum\";\n\nexport const TotalCount = (props) => {\n  const [ref, bounds] = useMeasure();\n  const [numSpring] = useSpring(() => ({\n\t\tfrom: { value: 0 },\n\t\tvalue: props.number,\n\t\tdelay: props.delay,\n\t\tconfig: config.slow\n  }));\n\n  const number = (value) => {\n    var number = prefixNum(bounds.width, value);\n    return number;\n  }\n\n  const division = (val1, val2) => (val2 === 0) ? 0 : val1/val2;\n  \n  return (\n    <animated.div style={props.animated} ref={ref}>\n      <div className=\"total\">\n        <div className=\"total-count\">\n          <animated.p className=\"global-counter\">\n            {numSpring.value.to(n => parseInt(n).toLocaleString(\"EN-us\"))}\n          </animated.p>\n          <p className={`global-percent ${props.number > 0 ? \"text-success\" : \"text-danger\"}`}>\n            {`+${props.simbol}${number(props.number)} (${(division(props.number, props.number) * 100).toFixed(0)}%)`}\n          </p>\n          <p className=\"global-title\">{props.title}</p>\n        </div>\n      </div>\n    </animated.div>\n  );\n};","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFacebook, faTwitter, faInstagram, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport React, { useState, useEffect } from \"react\";\nimport { dashboardService } from \"@/services\";\nimport { TotalCount } from '@/components/utils';\n\nexport const Main = (props) => {\n    const { user } = props;\n    const [analytics, setAnalytics] = useState(null);\n\n    useEffect(() => {\n        dashboardService.getAnalytics(user.type, user.id)\n            .then(data => setAnalytics(data));\n    }, []);\n\n    return (\n        <div className=\"main\">\n            <div className=\"main-profile\">\n                <div className=\"ngo-data\">\n                    <div>\n                        <img src={`${process.env.PUBLIC_URL}${user.img}`} alt=\"Profile NGO img\" className=\"logo\" />\n                    </div>\n                    <div className=\"data\">\n                        <p className=\"ngo-name\">{user.name}</p>\n                        <p className=\"title\">{user.preferredLanguageCode}</p>\n                        <p className=\"title\">{user.email}</p>\n                        <a href={user.webpage}>{user.webpage}</a>\n                        <div className=\"social-media\">\n                            {user.facebook && <a className=\"facebook\" href={user.facebook}><FontAwesomeIcon icon={faFacebook} className=\"mr-2\" /></a>}\n                            {user.instagram && <a className=\"instagram\" href={user.instagram}><FontAwesomeIcon icon={faInstagram} className=\"mr-2\" /></a>}\n                            {user.twitter && <a className=\"twitter\" href={user.twitter}><FontAwesomeIcon icon={faTwitter} className=\"mr-2\" /></a>}\n                            {user.linkedIn && <a className=\"linkedn\" href={user.linkedIn}><FontAwesomeIcon icon={faLinkedin} className=\"mr-2\" /></a>}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"sponsors\">\n                    <img src={`${process.env.PUBLIC_URL}/assets/example-profile-img/airbnb.jpg`} alt=\"Airbnb logo\" className=\"sponsor-badge\"></img>\n                    <img src={`${process.env.PUBLIC_URL}/assets/example-profile-img/facebook.png`} alt=\"Facebook logo\" className=\"sponsor-badge\"></img>\n                    <img src={`${process.env.PUBLIC_URL}/assets/example-profile-img/coca-cola.png`} alt=\"Coca Cola logo\" className=\"sponsor-badge\"></img>\n                    <img src={`${process.env.PUBLIC_URL}/assets/example-profile-img/space-x.jpg`} alt=\"SpaceX logo\" className=\"sponsor-badge\"></img>\n                    <img src={`${process.env.PUBLIC_URL}/assets/example-profile-img/airfrance.png`} alt=\"AirFrance logo\" className=\"sponsor-badge\"></img>\n                </div>\n            </div>\n            {analytics && user.type === 'nonprofit' && (\n                <div className=\"totals-percents global-kdis\">\n                    <div className=\"totals-container\">\n                        <TotalCount title=\"Investments\" number={analytics.investors} simbol=\"\" delay={100} />\n                        <TotalCount title=\"Trees Planted\" number={analytics.treesPlanted} simbol=\"\" delay={100} />\n                        <TotalCount title=\"Tree Cost\" number={analytics.costAverage} simbol = \"$\" delay={100}/>\n                    </div>\n                </div>\n            )}\n            {analytics && user.type !== 'nonprofit' && (\n                <div className=\"totals-percents global-kdis\">\n                    <div className=\"totals-container\">\n                        <TotalCount title=\"Investments\" number={analytics.blocks} simbol=\"\" delay={100} />\n                        <TotalCount title=\"Total Gross\" number={analytics.totalGross} simbol=\"$\" delay={100} />\n                        <TotalCount title=\"Total Net\" number={analytics.totalNet} simbol = \"$\" delay={100}/>\n                    </div>\n                </div>\n            )}\n            {/* <div className=\"totals-percents global-followers\">\n                <div className=\"total\">\n                    <div className=\"total-count\">\n                        <p className=\"global-counter\">{Followers}</p>\n                        <p className={`global-percent ${CurrentFollowers > 0 ? \"text-success\" : \"text-danger\"}`}>{`${number(CurrentFollowers)} (${(CurrentFollowers / Followers * 100).toFixed(0)}%)`}</p>\n                        <p className=\"global-title\">Followers</p>\n                    </div>\n                </div >\n                <div className=\"total\">\n                    <div className=\"total-count\">\n                        <p className=\"global-counter\">{Investors}</p>\n                        <p className={`global-percent ${CurrentInvestors > 0 ? \"text-success\" : \"text-danger\"}`}>{`+${number(CurrentInvestors)} (${(CurrentInvestors / Investors * 100).toFixed(0)}%)`}</p>\n                        <p className=\"global-title\">Investors</p>\n                    </div>\n                </div >\n            </div> */}\n        </div>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Project} from './';\nimport { Row, Col } from \"react-bootstrap\";\nimport { SumaryCard, AddProjectCard } from \"./\";\nimport { dashboardService } from \"@/services\";\n\nexport const Sumary = (props) => {\n  const [projects, setProjects] = useState([]);\n  const { user } = props;\n\n  useEffect(() => {\n    dashboardService.getProjectAnalytics(user.type, user.id)\n      .then(analytics => setProjects(analytics));\n  }, [props.user]);\n\n  return (\n    <Row >\n      {projects.map(project => (\n        <Col sm={12} md={4} lg={3} key={project.id} className=\"mt-3\">\n          <SumaryCard type={user.type} isDashboard={props.isDashboard} project={project} v1={10000} v2={30000} v3={5000} v4={12000} />\n        </Col>\n      ))}\n      {props.isDashboard && user.type === 'nonprofit' && (\n        <Col sm={12} md={4} lg={3} className=\"mt-3\">\n          <AddProjectCard/>\n        </Col>\n      )}\n    </Row>\n  );\n}\n\n","\nimport React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { CircularProgressbarWithChildren, buildStyles } from \"react-circular-progressbar\";\nimport { Card, ProgressBar, Form, Popover, OverlayTrigger } from \"react-bootstrap\";\nimport { prefixNum } from \"@/helpers\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n    XYPlot, HorizontalGridLines, XAxis, YAxis,\n    LineSeriesCanvas\n} from \"react-vis\";\nimport { useWidth } from \"@/hooks\";\n\nexport const SumaryCard = ({ type, isDashboard, project, v1 = 0, v2 = 0, v3 = 0, v4 = 0, }) => {\n    const history = useHistory();\n    const bodyWidth = useWidth();\n    const [toggleInfo, setToggleInfo] = useState(true);\n    const timestamp = new Date(\"Jul 2021\").getTime();\n    const ONE_DAY = 86400000;\n\n    const onRedirect = (id) => history.push(`/project?id=${id}`);\n\n    const cardWidth = () => {\n        if (bodyWidth < 768) {\n            return (\n                <>\n                    <div className=\"body-data mt-0\">\n                        <div className=\"counts\">\n                            <p>${prefixNum(320, project.invested)} Invested</p>\n                        </div>\n                        <div className=\"counts\">\n                            <p>{prefixNum(320, project.actualTrees)} Trees</p>\n                        </div>\n                    </div>\n                    <OverlayTrigger\n                        placement=\"bottom\"\n                        overlay={\n                            <Popover id=\"button-tooltip-2\" style={{ padding: 10 }}>\n                                Target trees: {prefixNum(720, project.actualTrees)} / {prefixNum(720, project.goalTrees)}\n                            </Popover>\n                        }\n                    >\n                        {({ ref, ...triggerHandler }) => (\n                            <div ref={ref} {...triggerHandler}>\n                                <ProgressBar style={{ width: \"100%\" }} variant=\"success\" now={((project.actualTrees / project.goalTrees * 100))} />\n                            </div>\n                        )}\n                    </OverlayTrigger>\n                </>\n            );\n        } else {\n            return (\n                <div onClick={() => setToggleInfo(false)} className=\"w-75 h-100 mx-auto mt-5 animate__animated animate__fadeIn\">\n                    <CircularProgressbarWithChildren\n                        styles={buildStyles({\n                            rotation: 0,\n                            strokeLinecap: \"butt\",\n                            textSize: \"16px\",\n                            pathTransitionDuration: 0.5,\n                            pathColor: `rgb(139, 195, 70)`,\n                            textColor: \"#f88\",\n                            trailColor: \"#d6d6d6\",\n                            backgroundColor: \"#3e98c7\",\n                        })}\n                        value={(project.actualTrees / project.goalTrees * 100)}\n                    >\n                        <div className=\"progress-children\">\n                            <div className=\"counts\">\n\n                                <p className=\"counter\">${prefixNum(320, project.invested)}</p>\n                                <p className=\"title\">Total Investments</p>\n                            </div>\n                            <div className=\"counts\">\n                                <p className=\"counter\">\n                                    <span>{prefixNum(720, project.actualTrees)}</span> / <span>{prefixNum(720, project.goalTrees)}</span>\n                                </p>\n                                <p className=\"title\">Target trees</p>\n                            </div>\n                        </div>\n                    </CircularProgressbarWithChildren>\n                </div>\n            )\n        }\n    }\n\n    const DATA = [\n        { x: timestamp + 1 * ONE_DAY, y: v1 },\n        { x: timestamp + 3 * ONE_DAY, y: v1 },\n        { x: timestamp + 5 * ONE_DAY, y: v1 },\n        { x: timestamp + 7 * ONE_DAY, y: v1 },\n        { x: timestamp + 10 * ONE_DAY, y: v2 },\n        { x: timestamp + 12 * ONE_DAY, y: v2 },\n        { x: timestamp + 14 * ONE_DAY, y: v2 },\n        { x: timestamp + 16 * ONE_DAY, y: v2 },\n        { x: timestamp + 20 * ONE_DAY, y: v3 },\n        { x: timestamp + 21 * ONE_DAY, y: v3 },\n        { x: timestamp + 23 * ONE_DAY, y: v3 },\n        { x: timestamp + 25 * ONE_DAY, y: v3 },\n        { x: timestamp + 27 * ONE_DAY, y: v4 },\n        { x: timestamp + 29 * ONE_DAY, y: v4 },\n        { x: timestamp + 30 * ONE_DAY, y: v4 },\n    ];\n\n    return (\n        <Card className=\"summary-card\">\n            <Card.Img\n                className=\"summary-image\"\n                variant=\"top\"\n                src={project.banner}\n            />\n            <Card.ImgOverlay className={bodyWidth < 768 ? \"px-3 py-1 image-overlay\" : \"image-overlay\"}>\n                <Card.Title className=\"m-0 h-100 d-flex justify-content-between align-items-center\">\n                    <p className=\"mt-2\">{project.name}</p>\n                    {isDashboard && type === 'nonprofit' && (\n                        <div>\n                            <button className=\"btn btn-outline-dark\" onClick={() => onRedirect(project.id)}>\n                                <FontAwesomeIcon icon={faCog} size=\"lg\" />\n                            </button>\n                        </div>\n                    )}\n                </Card.Title>\n            </Card.ImgOverlay>\n            <Card.Body className=\"py-auto px-1 card-body\">\n                {toggleInfo ? cardWidth() : (\n                    <div className=\"project-graph\">\n                        <Form.Group className=\"mb-2\" Control size=\"sm\" Id=\"loginUser\">\n                            <Form.Control as=\"select\" className=\"px-3\" aria-label=\"Floating label select example\">\n                                <option value=\"1\">Week</option>\n                                <option value=\"2\" selected=\"true\">Month</option>\n                                <option value=\"3\">Year</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <div onClick={() => setToggleInfo(true)} className=\"pl-3 mt-5 animate__animated animate__fadeIn\">\n                            <XYPlot xType=\"time\" height={200} width={275}>\n                                <HorizontalGridLines />\n                                <LineSeriesCanvas curve={\"curveMonotoneX\"} data={DATA} color=\"#8bc346\" />\n                                <XAxis />\n                                <YAxis hideLine tickFormat={v => `$${prefixNum(320, v)}`} />\n                            </XYPlot>\n                        </div>\n                    </div>\n                )}\n            </Card.Body>\n        </Card>\n\n    )\n}\n","export const Analytics = (props) => {\n  return (\n    <div className=\"charts\">\n        <div className=\"charts-area\">\n            <img src={`${process.env.PUBLIC_URL}/assets/${props.user.type !== \"nonprofit\" ? \"user_map.jpeg\" : \"user_charts.jpeg\"}`} alt=\"user data\" />\n        </div>\n        <p className=\"caption\">Provided by Sap Analytics Cloud</p>\n    </div>\n  );\n};","import React from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { Card } from \"react-bootstrap\";\nimport { useWidth } from \"@/hooks\";\n\nexport const AddProjectCard = ({ onToggle }) => {\n    const history = useHistory();\n    const bodyWidth = useWidth();\n\n    const onRedirect = () => history.push(`/project`);\n\n    return (\n        <div>\n            <Card className=\"summary-card\">\n                <Card.Img className=\"summary-image\" variant=\"top\" src={`${process.env.PUBLIC_URL}/assets/ngo-project-1.jpeg`} />\n                <Card.ImgOverlay className={bodyWidth < 768 ? \"px-3 py-1 image-overlay\" : \"image-overlay\"} >\n                    <Card.Title className=\"m-0 h-100 d-flex justify-content-around align-items-center\">\n                        <p className=\"mt-2\">Add Project</p>\n                    </Card.Title>\n                </Card.ImgOverlay>\n\n                <Card.Body className=\"py-auto px-1 card-body d-flex justify-content-center align-content-center\">\n                    <button className=\"btn btn-success m-auto\" onClick={onRedirect}>+</button>\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n","import \"@/scss/account/index.scss\";\nimport { useState, useEffect } from 'react';\nimport { LoadContent } from \"@/pages/general\";\nimport { authenticationService } from \"@/services\";\nimport { Container, Card, Row, Col } from 'react-bootstrap';\n\nimport { Avatar, Details } from './';\n\n\nexport const Account = () => {\n    const [user, setUser] = useState(null);\n    \n    useEffect(() => {\n        setUser(authenticationService.currentUserValue);\n    }, []);\n\n    if (!user) {\n        return null;\n    }\n    \n    return (\n        <LoadContent>\n            <main id=\"account\">\n                <Container as=\"main\" fluid=\"md\">\n                    <Card>\n                        <Card.Body>\n                            <Row xs={1} sm={1} md={2}>\n                                <Col>\n                                    <Avatar DisplayPicture={user.DisplayPicture} />\n                                </Col>\n                                <Col>\n                                    <Details user={user} />\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Container>\n            </main>\n        </LoadContent>\n    );\n}\n","import {Figure} from 'react-bootstrap';\n\nexport const Avatar = ({ DisplayPicture }) => {\n  return (\n    <div id=\"avatar-container\">\n      <Figure className=\"avatar\">\n          <Figure.Image src={DisplayPicture} width={200} height={200} alt=\"user profile picture\"/>\n      </Figure>\n    </div>\n  );\n};","import { useState, useEffect } from 'react';\nimport { Form } from \"react-bootstrap\";\n\nexport const Details = (props) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [website, setWebsite] = useState('');\n  const [facebook, setFacebook] = useState('');\n  const [instagram, setInstagram] = useState('');\n  const [twitter, setTwitter] = useState('');\n  const [linkedIn, setLinkedIn] = useState('');\n\n  useEffect(() => {\n    if (props.user !== null) {\n      setName(props.user.DisplayName ?? '');\n      setEmail(props.user.EmailAddress ?? '');\n      setWebsite(props.user.Website ?? '');\n      setFacebook(props.user.Facebook ?? '');\n      setInstagram(props.user.Instagram ?? '');\n      setTwitter(props.user.Twitter ?? '');\n      setLinkedIn(props.user.LinkedIn ?? '');\n    }\n  }, [props.user]);\n\n  return (\n    <div id=\"details-container\">\n      <div className=\"title-container\">\n        <h3>Account Details</h3>\n      </div>\n      <Form className=\"form-container\">\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter name\" value={name} onChange={e => setName(e.target.value)} />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.target.value)} />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"website\">\n          <Form.Label>Website</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter website\" value={website} onChange={e => setWebsite(e.target.value)} />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"facebook\">\n          <Form.Label>Facebook</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter Facebook\" value={facebook} onChange={e => setFacebook(e.target.value)} />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"instagram\">\n          <Form.Label>Instagram</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter Instagram\" value={instagram} onChange={e => setInstagram(e.target.value)} />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"twitter\">\n          <Form.Label>Twitter</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter Twitter\" value={twitter} onChange={e => setTwitter(e.target.value)} />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"linkedin\">\n          <Form.Label>LinkedIn</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter LinkedIn\" value={linkedIn} onChange={e => setLinkedIn(e.target.value)} />\n        </Form.Group>\n      </Form>\n      <button className=\"btn btn-success w-100\">\n        Save\n      </button>\n    </div>\n  );\n};","import \"@/scss/project/index.scss\";\nimport { useState, useEffect } from 'react';\nimport { useQuery } from \"@/hooks\";\nimport { LoadContent } from \"@/pages/general\";\nimport { ProjectForm } from './';\n\nexport const Project = (props) => {\n  const id = useQuery(\"id\");\n  const [project, setProject] = useState(false);\n\n  useEffect(() => {\n    if (id) {\n      setProject(true);\n    } else {\n      setProject(false);\n    }\n  }, [id]);\n\n  return (\n    <LoadContent>\n      <main id=\"project\">\n        <ProjectForm project={project}/>\n      </main>\n    </LoadContent>\n  );\n};","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Card, Alert, ProgressBar, Form, Col, Button } from 'react-bootstrap';\nimport XLSX from 'xlsx';\nimport { useForm } from 'react-hook-form';\nimport { dashboardService } from \"@/services\";\n\nimport rawContries from '@/json/Countries2.json';\nimport rawCurrencies from '@/json/Currencies.json';\n\nexport const ProjectForm = (props) => {\n  const history = useHistory();\n  const [error, setError] = useState(null);\n  const [fileLabel, setFileLabel] = useState('');\n  const [boundaries, setBoundaries] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const { register, formState: { errors }, handleSubmit } = useForm();\n\n  const countries = rawContries['countries'];\n  const currencies = rawCurrencies['currencies'];\n\n  const buttonState = (progress) => {\n    if (progress === 0) {\n      return 'Submit';\n    } else if (progress === 10) {\n      return 'Creating project...';\n    } else if (progress === 33) {\n      return 'Creating boundaries...';\n    } else if (progress === 66) {\n      return 'Creating costs...';\n    } else {\n      return 'Go Back';\n    }\n  };\n\n  const processData = (data) => {\n    try {\n      if (error !== null) {\n        setError(null);\n      }\n      const dataStringLines = data.split(/\\r\\n|\\n/);\n      const headers = dataStringLines[0].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n      \n      const boundaries = [];\n      for (let i = 1; i < dataStringLines.length; i++) {\n        const row = dataStringLines[i].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n        if (headers && row.length === headers.length) {\n          const obj = {\n            Index: parseInt(row[0]) ?? 0,\n            Coordinate_Latitude: parseFloat(row[1]) ?? 0,\n            Coordinate_Longitude: parseFloat(row[2]) ?? 0,\n          };\n\n          const idx = Object.values(obj).findIndex(val => isNaN(val));\n          if (idx !== -1) {\n            throw Error();\n          } else {\n            boundaries.push(obj);  \n          }\n        }\n      }\n  \n      return boundaries;\n    } catch (e) {\n      setError('There was an error with your CSV file.');\n      return [];\n    }\n  };\n\n  const onSubmitCoordenates = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (ev) => {\n      const bstr = ev.target.result;\n      const wb = XLSX.read(bstr, { type: 'binary' });\n\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n\n      const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n      setBoundaries(processData(data));\n    };\n\n    if (typeof file === 'object') {\n      reader.readAsBinaryString(file);\n      setFileLabel(file.name);\n    }\n\n  };\n\n  const onSubmit = async (data) => {\n\n    if (progress === 100) {\n      return history.push('/dashboard');\n    }\n\n    if (error == null && boundaries.length > 0) {\n      setProgress(10);\n      const id = await dashboardService.createProject(data, boundaries);\n      setProgress(33);\n\n      await dashboardService.createBoundaries(id, boundaries);\n      setProgress(66);\n\n      // await dashboardService.createCost(id, cost);\n      setProgress(100);\n    } else {\n      setError('Boundaries file is required.');\n    }\n  };\n\n  return (\n    <Card className=\"form-container\">\n      <Card.Title className=\"form-title\">{props.project ? 'Edit Project' : 'Add Project'}</Card.Title>\n      <Card.Body>\n        <ProgressBar now={progress} />\n        <div style={{ margin: '20px 0px' }} />\n        <Alert show={error !== null} variant='danger' onClose={() => setError(null)} dismissible>\n          {error}\n        </Alert>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Form.Group className=\"mb-2\" size=\"sm\">\n            <Form.Label>Project Name</Form.Label>\n            <Form.Control\n              size=\"sm\"\n              isInvalid={errors.name}\n              {...register('name', { required: \"Project name is required\" })}\n            />\n            {errors.name && (\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.name.message}\n              </Form.Control.Feedback>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-2\" size=\"sm\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              size=\"sm\"\n              as=\"textarea\"\n              isInvalid={errors.description}\n              rows={3}\n              {...register('description', { required: \"Project description is required\" })}\n            />\n            {errors.description && (\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.description.message}\n              </Form.Control.Feedback>\n            )}\n          </Form.Group>\n          <Form.Group className=\"mb-2\" size=\"sm\">\n            <Form.Label>Country</Form.Label>\n            <Form.Control as='select' size='sm' isInvalid={errors.country} {...register('country', { required: \"Country is required\" })}>\n              {countries.map((country) => (\n                <option key={country['code']} value={country['code']}>{country['name']}</option>\n              ))}\n            </Form.Control>\n            {errors.country && (\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.country.message}\n              </Form.Control.Feedback>\n            )}\n          </Form.Group>\n          {/* <Form.Group className=\"mb-2\" size=\"sm\">\n            <Form.Label>Banner Picture</Form.Label>\n            <Form.File\n              id=\"custom-file-translate-scss\"\n              label=\"\"\n              lang=\"en\"\n              custom\n            />\n          </Form.Group> */}\n          <Form.Group className=\"mb-2 row\" size=\"sm\">\n            <Col xs={2}>\n              <Form.Label>Currency</Form.Label>\n              <Form.Control as='select' size='sm' isInvalid={errors.country} {...register('currency', { required: \"Currency is required\" })}>\n                {currencies.map((currency) => (\n                  <option key={currency['code']} value={currency['code']}>{currency['code']}</option>\n                ))}\n              </Form.Control>\n              {errors.currency && (\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.currency.message}\n                </Form.Control.Feedback>\n              )}\n            </Col>\n            <Col xs={5}>\n              <Form.Label>Tree Cost</Form.Label>\n              <Form.Control\n                size=\"sm\"\n                type=\"number\"\n                isInvalid={errors.treeCost}\n                {...register('treeCost', { required: \"Tree cost is required\"})}\n              />\n              {errors.treeCost && (\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.treeCost.message}\n                </Form.Control.Feedback>\n              )}\n            </Col>\n            <Col xs={5}>\n              <Form.Label>Worker Count</Form.Label>\n              <Form.Control\n                size=\"sm\"\n                type=\"number\"\n                isInvalid={errors.workerCount}\n                {...register('workerCount', { required: \"Worker count is required\"})}\n              />\n              {errors.workerCount && (\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.workerCount.message}\n                </Form.Control.Feedback>\n              )}\n            </Col>\n          </Form.Group>\n          <Form.Group className=\"mb-2 row\" size=\"sm\">\n            <Col>\n              <Form.Label>Planting Area (&#13217;)</Form.Label>\n              <Form.Control\n                size=\"sm\"\n                type=\"number\"\n                isInvalid={errors.plantingArea}\n                {...register('plantingArea', { required: \"Planting area is required\" })}\n              />\n              {errors.plantingArea && (\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.plantingArea.message}\n                </Form.Control.Feedback>\n              )}\n            </Col>\n            <Col>\n              <Form.Label>Planting Density (&#13217;)</Form.Label>\n              <Form.Control\n                size=\"sm\"\n                type=\"text\"\n                isInvalid={errors.plantingDensity}\n                {...register('plantingDensity', { required: \"Planting density is required\"})}\n              />\n              {errors.plantingDensity && (\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.plantingDensity.message}\n                </Form.Control.Feedback>\n              )}\n            </Col>\n          </Form.Group>\n          <Form.Group controlId=\"formFile\" className=\"mb-2\" size=\"sm\">\n            <Form.Label>Coordinates (CSV Format)</Form.Label>\n            <Form.File\n              id=\"custom-file-translate-scss\"\n              label={fileLabel}\n              custom\n              type=\"file\"\n              accept=\".csv,.xlsx,.xls\"\n              onChange={onSubmitCoordenates}\n            />\n          </Form.Group>\n          <div style={{margin: '20px 0px'}}/>\n          <Button variant=\"primary\" className=\"btn btn-success w-100\" type=\"submit\" disabled={progress > 0 && progress < 100}>\n            {buttonState(progress)}\n          </Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}","export default __webpack_public_path__ + \"static/media/ecology.9e74e8cf.svg\";","export default __webpack_public_path__ + \"static/media/green-earth.00b8bfa7.svg\";","import React from \"react\";\n\nexport const FlatIcon = ({children, size = \"\"}) => {\n    return (\n        <div className={`flat-icon ${size}`}>\n            {children}\n        </div>\n    )\n}\n\n","import React, { useEffect, useState } from \"react\"\nimport { useForm } from \"react-hook-form\";\nimport { faPaypal } from \"@fortawesome/free-brands-svg-icons\";\nimport { faMoneyCheckAlt, faCheckCircle } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { projectsService } from \"@/services\"\nimport { useHistory } from \"react-router\";\n\nexport const PaymentMethod = ({ onClose, recipientId, ownerId, compensation, estimated, costConcept, treeCost, total, counter }) => {\n\n\n    const [paymentMethodSelected, setPaymentMethodSelected] = useState(null);\n\n    const history = useHistory();\n\n    const [paying, setPaying] = useState({\n        loading: false,\n        error: '',\n        data: [],\n        invest: false,\n    });\n\n    const [comp, setCompensation] = useState({\n        Amount: 0,\n        Unit: 0,\n        CostPerUnit: 0,\n        Currency_code: \"USD\",\n        Recipient_ID: recipientId,\n        Owner_ID: ownerId,\n    });\n\n    useEffect(() => {\n        if (compensation === \"co2\") {\n\n            setCompensation({\n                ...comp,\n                Amount: total,\n                Unit: estimated,\n                CostPerUnit: treeCost,\n            })\n\n        } else if (compensation === \"reforest\") {\n            setCompensation({\n                ...comp,\n                Amount: total,\n                Unit: counter,\n                CostPerUnit: treeCost,\n            })\n        }\n        return () => {\n\n        }\n    }, [])\n\n    const setPayment = () => {\n\n        setPaying({\n            ...paying,\n            loading: true\n        });\n\n        projectsService.createInvestment(comp).then(\n            invest =>{\n                setPaying({\n                    ...paying,\n                    loading: false,\n                    invest: true,\n                    data: invest\n                });\n                setTimeout(() => {\n                    onClose();\n                    history.push(\"/marketplace\");\n                }, 3000);\n            },\n            error => {\n                setPaying({\n                    ...paying,\n                    loading: false,\n                    invest: false,\n                    error: error\n                });\n                setTimeout(() => {\n                    onClose();\n                }, 3000);\n            }\n        )\n\n    }\n\n    return (\n        <div className=\"invest\">\n            <div className=\"ngo-project\">\n                <p>Investing in Ketrawe Agroforestry by Plant for the planet</p>\n            </div>\n\n            <div className=\"totals\">\n                <p>CO<sub>2</sub> neutralization</p>\n                <p>\n                    {compensation === \"co2\" && counter}\n                    {compensation === \"reforest\" && estimated.toFixed(1)} kg\n                </p>\n            </div>\n\n            <div className=\"totals\">\n                <p>Trees to plant</p>\n                <p>\n                    {compensation === \"co2\" && estimated.toFixed(0)}\n                    {compensation === \"reforest\" && counter}\n                </p>\n            </div>\n\n            <div className=\"totals\">\n                <p>Total</p>  <p>${total.toFixed(2)} USD</p>\n            </div>\n            {!paying.invest &&\n            <>\n            <div className=\"ngo-project\">\n                <p>Choose your method payment</p>\n            </div>\n            \n                \n                    <div className=\"choose-payment\">\n                        <div className=\"payment-method\" onClick={() => setPaymentMethodSelected(\"paypal\")}>\n                            {paymentMethodSelected === \"paypal\" &&\n                                <div className=\"check\">\n                                    <FontAwesomeIcon icon={faCheckCircle} />\n                                </div>\n                            }\n                            <div className={`icon ${paymentMethodSelected === \"paypal\" ? 'active' : ''}`}>\n                                <FontAwesomeIcon icon={faPaypal} />\n                            </div>\n                        </div>\n                        <div className=\"payment-method\" onClick={() => setPaymentMethodSelected(\"bankTransference\")}>\n                            {paymentMethodSelected === \"bankTransference\" &&\n                                <div className=\"check\">\n                                    <FontAwesomeIcon icon={faCheckCircle} />\n                                </div>\n                            }\n                            <div className={`icon ${paymentMethodSelected === \"bankTransference\" ? 'active' : ''}`}>\n                                <FontAwesomeIcon icon={faMoneyCheckAlt} />\n                            </div>\n                        </div>\n                    </div>\n\n                    {paymentMethodSelected === \"bankTransference\" &&\n                        <div className=\"totals\">\n                            <p>Ebanx number</p>\n                            <p>\n                                Y6zt5r8kNPoeNsjGvTHnnEpXSjz5n5\n                            </p>\n                        </div>\n\n                    }\n\n                    <div className=\"d-grid gap-2 mt-4\">\n                        <button disabled={(!paymentMethodSelected || paying.loading)} className={`btn btn-success w-100`} onClick={setPayment}>{paying.loading ? \"Investing...\" : \"Invest\"}</button>\n                    </div>\n                </>\n            }\n            {paying.invest &&\n                <div className=\"alert alert-success text-center\">\n                    Successful investment\n                </div>\n            }\n        </div>\n    )\n}\n","import { faMinus, faPlus } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React, { useEffect, useState } from \"react\"\nimport { useCounter } from \"../../hooks/useCounter\"\n\n\nexport const Compensation = ({ compensation, investForm, count, kpi, costCompensation }) => {\n\n\n\n    const { register, setValue, getValues } = investForm;\n    const { counter, setCounter, increment, decrement } = count;\n    const { costPerTree, carbonOffsetPerTree, carbonOffsetSymbol } = kpi;\n    const [cost, setCost] = costCompensation;\n\n\n    const { costConcept, estimated, total } = cost;\n\n    useEffect(()=>{\n        setCounter(0);\n    },[])\n\n    useEffect(() => {\n        setValue(\"quantity\", counter);\n        if (compensation.section === \"reforest\") setCost({ ...cost, costConcept: costPerTree, estimated: counter * carbonOffsetPerTree, total: costConcept * counter })\n        if (compensation.section === \"co2\") setCost({ ...cost, costConcept: costPerTree / carbonOffsetPerTree, estimated: counter / carbonOffsetPerTree  , total: costConcept * counter })\n    }, [counter]);\n\n    return (\n        <div className=\"invest\">\n\n            <div className=\"ngo-project\">\n                <p>Investing in Ketrawe Agroforestry by Plant for the planet</p>\n            </div>\n            <div className=\"invest-first-steep\">\n                <div className=\"text-option\">\n                    {compensation.section === \"co2\" && <><p>Choose your {carbonOffsetSymbol} of CO<sub>2</sub> offset</p></>}\n                    {compensation.section === \"reforest\" && <><p>Choose your trees quantity</p></>}\n\n                </div>\n\n                <div className=\"invest-input\">\n                    <button className=\"btn btn-light\" onClick={() => { decrement() }}><FontAwesomeIcon icon={faMinus} /></button>\n                    <input className=\"input\" type=\"number\" style={{ fontSize: '20px', textAlign: 'right' }} min=\"0\" {...register(\"quantity\")} onKeyUp={() => setCounter(parseInt(getValues(\"quantity\")))} />\n                    <button className=\"btn btn-light\" onClick={() => { increment() }}><FontAwesomeIcon icon={faPlus} /></button>\n                </div>\n\n                <div className=\"totals\">\n                    {compensation.section === \"reforest\" && <p>Price per tree</p>}\n                    {compensation.section === \"co2\" && <p>Price per {carbonOffsetSymbol} CO<sub>2</sub> tons</p>}\n                    <p>${costConcept.toFixed(2)} USD</p>\n                </div>\n\n                <div className=\"totals\">\n                    {compensation.section === \"co2\" && <p>Estimated trees planted</p>}\n                    {compensation.section === \"reforest\" && <p>Co<sub>2</sub> neutralization in tons</p>}\n                    <p>{isNaN(estimated)?(0).toFixed(1):estimated.toFixed(1)}</p>\n                </div>\n\n                <div className=\"grand-total\">\n                    <p>Total:</p>  <p>${isNaN(total)?(0).toFixed(2):total.toFixed(2)} USD</p>\n                </div>\n\n\n                <div className=\"grand-total\">\n                    <div></div>  <select><option>USD</option></select>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n","import { Modal, Col, Row, Tooltip } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport { useWidth } from \"@/hooks\";\nimport EcologyIcon from \"@/assets/flat-icon/svg/ecology.svg\";\nimport GreenEarthIcon from \"@/assets/flat-icon/svg/green-earth.svg\";\nimport { FlatIcon } from \"@/components/icon\";\nimport { PaymentMethod } from \"./PaymentMethod\";\nimport { Compensation } from \"./Compensation\";\nimport { useForm } from \"react-hook-form\";\nimport { useCounter } from \"../../hooks/useCounter\";\n\n\nexport const Invest = ({ show, handleClose, handleShow, project }) => {\n\n    const investForm = useForm({\n        mode: \"onChange\",\n        reValidateMode: \"onChange\",\n        criteriaMode: \"firstError\",\n    });\n\n    const {\n        ID: recipientId,\n        Owner_ID: ownerId,\n        analytics\n\n    } = project;\n\n    const carbonSymbol = \"kg\";\n    \n    const {\n        sowCost: treeCost,\n        co2AverageCost: carbonPerTree,\n    } = analytics;\n    console.log(project);\n    const kpi = {\n        costPerTree: treeCost,\n        carbonOffsetPerTree: carbonPerTree,\n        carbonOffsetSymbol: carbonSymbol,\n    }\n\n    const sections =\n    {\n        ask: { sectionSelected: \"ask\", title: \"Choose the invest type\", back: null, to: \"compensation\" },\n        compensation: { sectionSelected: \"compensation\", title: \"Compensation\", back: \"ask\", to: \"payment\" },\n        payment: { sectionSelected: \"payment\", title: \"Choose the payment method\", back: \"compensation\", to: null },\n\n    };\n\n    const bodyWidth = useWidth();\n    const [section, setSection] = useState({ ...sections.ask });\n    const [click, setClick] = useState({ section: \"co2\", click: 1 });\n    const [disabled, setDisabled] = useState(true);\n    const count = useCounter();\n    const { counter } = count;\n\n    const costCompensation = useState({\n        costConcept: 0,\n        estimated: 0,\n        total: 0,\n    });\n\n\n    const [cost] = costCompensation;\n\n\n    useEffect(() => {\n        if (counter > 0) {\n            setDisabled(false);\n        } else {\n            setDisabled(true);\n        }\n    }, [counter])\n\n\n    const onClose = (e) => {\n        handleClose(e);\n        setTimeout(() => {\n            setSection({ ...sections.ask });\n        }, 500);\n    }\n\n    const nextSection = () => {\n        if (section.to) setSection({ ...sections[section.to] });\n    }\n\n    const backSection = () => {\n        if (section.back) setSection({ ...sections[section.back] });\n    }\n\n    const buttonOption = () => {\n            nextSection();\n    }\n\n    return (\n        <>\n            <Modal show={show} onHide={onClose} centered=\"true\">\n                <Modal.Header closeButton>\n                    {section.sectionSelected !== \"ask\" &&\n                        <OverlayTrigger\n                            placement=\"top\"\n                            overlay={\n                                <Tooltip id=\"tooltip-top\">\n                                    Back\n                                </Tooltip>\n                            }\n                        >\n                            <button className=\"btn float-left pl-0\" onClick={() => { backSection() }}><FontAwesomeIcon className=\"text-success back-icon\" icon={faArrowCircleLeft} />\n                            </button>\n                        </OverlayTrigger>\n                    }\n                    <Modal.Title centered=\"true\">\n                        {section.sectionSelected === \"compensation\" && <>\n                            {click.section === \"co2\" && <>Co<sub>2</sub> </>}\n                            {click.section === \"reforest\" && <>Reforest </>}\n                        </>\n                        }\n                        {section.title}\n\n                    </Modal.Title>\n\n                    <div style={{ position: \"absolute\", left: \"50%\" }}>\n                        <div style={{ position: \"relative\", left: \"-50%\", top: \"40px\" }}>\n                            {(section.sectionSelected === \"compensation\" && click.section === \"co2\") && <FlatIcon size=\"xxl\"><img src={EcologyIcon} alt=\"icono ecology\" style={{ width: \"100%\" }} /></FlatIcon>}\n                            {(section.sectionSelected === \"compensation\" && click.section === \"reforest\") && <FlatIcon size=\"xxl\"><img src={GreenEarthIcon} alt=\"icono ecology\" style={{ width: \"100%\" }} /></FlatIcon>}\n                        </div>\n                    </div>\n\n                </Modal.Header>\n                <Modal.Body>\n                    {section.sectionSelected === \"ask\" &&\n                        <>\n                            <Row>\n                                <Col onMouseEnter={bodyWidth > 720 ? () => { setClick({ ...click, section: \"co2\" }) } : undefined}>\n                                    <button className={`btn w-100 mb-4${click.section === \"co2\" ? \" btn-success\" : \" btn-light text-muted\"}`} onClick={nextSection}>\n                                        CO<sub>2</sub> compensation\n                                    </button>\n                                </Col>\n                                <Col onMouseEnter={bodyWidth > 720 ? () => { setClick({ ...click, section: \"reforest\" }) } : undefined}>\n                                    <button className={`btn w-100 mb-4${click.section === \"reforest\" ? \" btn-success\" : \" btn-light text-muted\"}`} onClick={nextSection} >\n                                        Reforest compensation\n                                    </button>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    {click.section === \"co2\" &&\n                                        <p className=\"animate__animated animate__fadeIn\">\n                                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis ligula purus, ultrices eget tortor id, hendrerit pulvinar ipsum. Curabitur suscipit mauris in mollis sollicitudin. Donec facilisis elit finibus, hendrerit lorem non, sodales urna. Etiam porta venenatis libero, id bibendum lacus dictum sit amet. Etiam volutpat dui sed leo dignissim, sit amet ultrices turpis consequat.\n                                        </p>\n                                    }\n                                    {click.section === \"reforest\" &&\n                                        <p className=\"animate__animated animate__fadeIn\">\n                                            Sed gravida libero ac dolor varius, in euismod massa sagittis. Suspendisse commodo felis ut iaculis blandit. Pellentesque eget augue non erat mollis porta ac eget nunc. Cras et neque nunc. Proin a accumsan enim. Quisque blandit dui auctor dolor venenatis, nec feugiat mauris porta. Quisque ut luctus lacus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Nulla et ipsum ultrices.\n                                        </p>\n                                    }\n                                </Col>\n\n                            </Row>\n                        </>\n                    }\n\n                    {(section.sectionSelected === \"compensation\") &&\n                        <Compensation compensation={click} investForm={investForm} count={count} kpi={kpi} costCompensation={costCompensation} />\n                    }\n\n                    {section.sectionSelected === \"payment\" &&\n                        <PaymentMethod {...cost} recipientId={recipientId} treeCost={treeCost} ownerId={ownerId} counter={counter} compensation={click.section} onClose={onClose}/>\n                    }\n\n                    {(section.sectionSelected !== \"ask\" && section.sectionSelected !== \"payment\") &&\n                        <div className=\"d-grid gap-2 mt-4\">\n                            <button disabled={disabled} className={`btn btn-success w-100`} onClick={buttonOption} >{\"Next\"}  </button>\n                        </div>\n                    }\n\n                </Modal.Body>\n            </Modal>\n        </>\n    )\n\n}","import { useState } from \"react\";\n\n\nexport const useCounter = (initialState=0) => {\n    \n    const [counter, setCounter] = useState(initialState);\n    \n    const increment = () => {setCounter(counter + 1)};\n\n    const decrement = () => {if(counter>0)setCounter(counter - 1)};\n\n    return {\n        counter,\n        setCounter,\n        increment,\n        decrement,\n    };\n}\n","import React, { useState } from \"react\"\nimport { Invest} from \"./Invest\";\n\nexport const InvestButton = React.memo(({project}) => {\n\n    const [show, setShow] = useState(false);\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\n    return (\n        <>\n            <button className=\"fill-button donate-button\"  onClick={handleShow}>Invest</button>\n            <Invest show={show} handleClose={handleClose} project={project} handleShow={handleShow} />\n        </>\n    )\n});\n","import { createContext } from \"react\";\n\nexport const MarketplaceContext = createContext(null);\n\n ","import React, { useContext, useEffect, useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport { breakText } from \"@/helpers\";\nimport { TotalCount } from '@/components/utils';\nimport { dashboardService } from \"@/services\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\n\n\nexport const Ngo = ({ ngos }) => {\n    const { url } = useRouteMatch();\n    console.log(ngos);\n    const ngo = ngos.data[0];\n    const [summary, setSummary] = useState({\n        Investments: -1,\n        Trees: -1,\n        Tree_cost: -1,\n    });\n\n    const history = useHistory();\n\n    const goBack = () => {\n        history.goBack();\n    }\n\n    const goProfile = () => {\n        history.push(`/profile?id=${ngo.id}`)\n    }\n\n    useEffect(() => {\n        dashboardService.getAnalytics('nonprofit', ngo.id).then(\n            data => setSummary({...summary, Investments: data.totalNet, Trees:data.treesPlanted, Tree_cost:data.costAverage}));\n    }, []);\n\n\n    return (\n        <>\n            <button className=\"back-icon btn float-left pl-0\">\n                <FontAwesomeIcon className=\"\" icon={faArrowLeft} onClick={goBack} />\n            </button>\n            <div className=\"ngos-profile profile\">\n\n                <div className=\"ngo-pro\" onClick={goProfile}>\n                    <img className=\"picture\" src={ngo.img} alt=\"Profile NGO img\" />\n                    <div className=\"name\">\n                        <p >{breakText(ngo.name, 30)}</p>\n                    </div>\n                </div>\n\n                <div className=\"totals-percents marketplace\">\n                    <div className=\"totals-container marketplace\">\n                        {summary.Investments === -1 ? null : <TotalCount title=\"Investments\" number={summary.Investments} simbol=\"$\" delay={1000} />}\n                        {summary.Trees === -1 ? null : <TotalCount title=\"Trees Planted\" number={summary.Trees} simbol=\"\" delay={1000} />}\n                        {summary.Tree_cost === -1 ? null : <TotalCount title=\"Tree Cost\" number={summary.Tree_cost} simbol=\"$\" delay={1000} />}\n                    </div>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\n","import React from 'react'\nimport ContentLoader from \"react-content-loader\"\n\nexport const NgoLoading = () => {\n    return (\n        <div>\n            <ContentLoader\n                uniqueKey=\"ramdom-ngo-key\"\n                speed={2}\n                width={380}\n                height={112}\n                viewBox=\"0 0 400 160\"\n                backgroundColor=\"#f3f3f3\"\n                foregroundColor=\"#ecebeb\"\n                style={{ width: '100%' }}\n            >\n                <rect x=\"0\" y=\"85\" rx=\"3\" ry=\"3\" width=\"100\" height=\"8\" />\n                <circle cx=\"45\" cy=\"45\" r=\"35\"/>\n\n            </ContentLoader>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from \"react\"\nimport useMeasure from \"react-use-measure\";\n// import {prefixNum} from \"../../helpers/prefixNum\";\nimport { Ngos } from \"./\";\nimport { ngoService } from \"@/services\";\nimport { MarketplaceContext } from \"@/context\";\nimport { useQuery } from \"@/hooks\";\nimport { Ngo } from \"./Ngo\";\nimport { useLocation } from \"react-router-dom\";\nimport { NgoLoading } from \"./NgoLoading\";\n\nexport const Main = () => {\n    const { ngosRed } = useContext(MarketplaceContext);\n    const [ngos, dispatch] = ngosRed;\n    const id = useQuery(\"id\");\n    const { pathname } = useLocation();\n\n\n    useEffect(() => {\n        \n        if (!id && pathname === \"/marketplace\") {\n            dispatch({ type: 'loading' });\n            ngoService.getAll().then(\n                ngos => {\n                    dispatch({ type: 'finished', payload: ngos });\n                },\n                error => {\n                    dispatch({ type: 'error', payload: error });\n                }\n            );\n        } else {\n            if(ngos.data === []){\n                dispatch({ type: 'loading' });\n                ngoService.getById(id).then(\n                    ngos => {\n                        console.log(ngos);\n                        dispatch({ type: 'finished', payload: ngos });\n                    },\n                    error => {\n                        dispatch({ type: 'error', payload: error });\n                    }\n                );\n            }\n           \n            \n        }\n\n    }, [id]);\n\n\n    useEffect(() => {\n\n    }, [ngos]);\n\n    return (\n        <>\n            {ngos.loading &&\n                <div className=\"main-ngo\">\n                    <NgoLoading />\n                </div>\n            }\n            {!ngos.loading &&\n                <div className=\"main-ngo\">\n                    {ngos.data.length > 1 &&\n                        <Ngos ngos={ngos} />}\n                    {ngos.data.length === 1 &&\n                        <Ngo ngos={ngos} />}\n                </div>\n            }\n        </>\n    )\n}","import { faLeaf } from \"@fortawesome/free-solid-svg-icons\"\n\n\nexport const projectsReducer = (state = {}, action) => {\n\n    switch (action.type) {\n        case \"loading\":\n            return { loading: true, error: '', data: [] }\n        case \"finished\":\n            return { loading: false, error: '', data: action.payload }\n        case \"error\":\n            return { loading: false, error: action.payload, data: [] }\n        default:\n            return state;\n    }\n}\n","import React from 'react'\n\nexport const ngosReducer = (state = {}, action) => {\n    \n    switch(action.type){\n        case \"loading\":\n            return { loading: true, error: '', data: []}\n        case \"finished\":\n            return { loading: false, error: '', data: action.payload}\n        case \"error\":\n            return { loading: false, error: action.payload, data: []}\n        default:\n            return state;\n    }\n}\n","\nimport \"@/scss/market-place/index.scss\";\nimport React, { useEffect, useReducer } from \"react\"\nimport { LoadContent } from \"@/pages/general\";\nimport { Main, Projects, ProjectMap } from \"./\";\nimport { ProjectDetails } from \"./\";\nimport {\n    Switch,\n    Route,\n    useRouteMatch,\n} from \"react-router-dom\";\nimport { MarketplaceContext } from \"@/context\";\nimport { projectsReducer, ngosReducer } from \"@/reducers\";\n\nexport const MarketPlace = () => {\n\n    const { path } = useRouteMatch();\n    const projectsRed = useReducer(projectsReducer, { loading: true });\n    const ngosRed = useReducer(ngosReducer, { loading: true });\n\n    return (\n\n        <MarketplaceContext.Provider value={{\n            projectsRed,\n            ngosRed\n        }}>\n            <div className=\"project-map\">\n                <ProjectMap />\n            </div>\n            <Main />\n                <div style={{ overflow: \"hidden\" }}>\n                    <div className=\"market-place\">\n                        <div className=\"ngos-projects\">\n                            <Switch>\n                                <Route exact path={path}>\n                                    <Projects/>\n                                </Route >\n                                <Route path={`${path}/project`}>\n                                    <ProjectDetails />\n                                </Route>\n                            </Switch >\n                        </div>\n                    </div>\n                </div>\n        </MarketplaceContext.Provider >\n    )\n}","import React, { useContext, useEffect } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport { breakText } from \"@/helpers\";\nimport {MarketplaceContext} from \"@/context\";\n\nexport const Ngos = ({ ngos }) => {\n    const history = useHistory();\n    const { url } = useRouteMatch();\n    const { ngosRed } = useContext(MarketplaceContext);\n    const [ngoData ,dispatch] = ngosRed;\n\n    useEffect(() => {\n\n\n    }, []);\n\n    const settings = {\n        dots: false,\n        infinite: true,\n        speed: 500,\n        slidesToScroll: 4,\n        slidesToShow: 4\n    };\n\n    const onFilterByNgos = (ngo) => {\n        dispatch({ type: 'loading' });\n        dispatch({ type: 'finished', payload: [ngo] });\n        history.push(`${url}?id=${ngo.id}`);\n    };\n    \n\n    return (\n        <div className=\"ngos-profile\">\n            <Slider {...settings}>\n                {ngos.data && ngos.data.map((ngo, i) => {\n                    return (\n                        <div key={ngo.id} className=\"ngo-pro ngos\" onClick={() => onFilterByNgos(ngo)}>\n                            <img className=\"picture\" src={ngo.img} alt=\"Profile NGO img\" />\n                            <div className=\"name\">\n                                <p >{breakText(ngo.name, 30)}</p>\n                            </div>\n                        </div>\n                    );\n                })}\n            </Slider>\n        </div>\n    )\n\n}\n","export default __webpack_public_path__ + \"static/media/planting.17f7c220.svg\";","import React from \"react\"\nimport { CircularProgressbarWithChildren, buildStyles } from \"react-circular-progressbar\";\nimport { FlatIcon } from \"@/components/icon\";\nimport PlantingIcon from \"@/assets/flat-icon/svg/planting.svg\";\n\n\nexport const CircularProgress = ({ currentT, goalT, number, width }) => {\n    return (\n        <CircularProgressbarWithChildren styles={buildStyles({\n            rotation: 0,\n            strokeLinecap: \"butt\",\n            textSize: \"16px\",\n            pathTransitionDuration: 0.5,\n            pathColor: `rgb(139, 195, 70)`,\n            textColor: \"#f88\",\n            trailColor: \"#d6d6d6\",\n            backgroundColor: \"#3e98c7\",\n            width: `${width}px`\n        })}\n            value={(currentT / goalT * 100)}>\n            <div className=\"d-flex align-items-center flex-column\" style={{ marginTop: -5 }}>\n                {/* <div className=\"totals-percents kdis\">\n                    <div className=\"total\">\n                        <div className=\"total-count\">\n                            <p className=\"counter\">${prefixNum(320, number)}</p>\n                            <p className=\"title\">Total Investments</p>\n                        </div>\n\n                        <div className=\"total-count pt-1\">\n                            <p className=\"counter\">213</p>\n                            <div className=\"title\">Trees planted</div>\n                        </div>\n                    </div >\n                </div> */}\n                \n                <FlatIcon size=\"xxl\"><img src={PlantingIcon} alt=\"icono agenda\" style={{width: \"100%\"}}/></FlatIcon>\n\n                <div className=\"target-kpi\">\n                    <p className=\"current\">{currentT.toLocaleString(\"EN-us\")}/</p>\n                    <div className=\"goal\"><p className=\"goal-value\">{goalT.toLocaleString(\"EN-us\")}</p><p className=\"small-text\">target trees</p></div>\n                </div>\n            </div>\n        </CircularProgressbarWithChildren>\n    )\n}\n","import React from \"react\"\nimport { ProgressBar } from \"react-bootstrap\"\n\nexport const ProgressBarProject = ({currentT, goalT}) => {\n    return (\n        <div className=\"progress-bar-project\">\n        <div className=\"progress-bar\">\n            <ProgressBar  style={{ width: \"%\" }} variant=\"success\" now={(currentT / goalT * 100)} />\n        </div>\n        {/* <p className=\"current-goal\"><span className=\"current\">{currentT.toLocaleString(\"EN-us\")}</span>/{goalT.toLocaleString(\"EN-us\")} <span> trees</span></p> */}\n        \n    </div>\n    )\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { ProgressBarProject } from \"@/components/progress\";\nimport { InvestButton } from \"./\";\nimport { useHistory } from \"react-router\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart, faShareAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { MarketplaceContext } from \"@/context\";\n\nexport const ProjectCard = ({ project }) => {\n    const { projectsRed } = useContext(MarketplaceContext);\n    const [projects, dispatch] = projectsRed;\n    const history = useHistory();\n    const { url } = useRouteMatch();\n\n    const seeDetails = () => {\n        dispatch({ type: 'loading' });\n        dispatch({ type: 'finished', payload: [project] });\n        history.push(`${url}/project?id=${project.id}`);\n    }\n\n    const {analytics} = project;\n\n    useEffect(() => {\n        return () => {\n        }\n    }, [])\n\n    return (\n        <Card className=\"project-card\" onClick={() => { seeDetails() }}>\n            <Card.Img src={project.banner} className=\"banner-img\" style={{ objectFit: \"cover\" }} alt=\"project ngo\" />\n            <Card.ImgOverlay className=\"card-body  p-0\">\n                <div className=\"project-header\">\n                    <div className=\"icons\">\n                        <div className=\"icon like\">\n                            <FontAwesomeIcon icon={faHeart} />\n                        </div>\n                        <div className=\"icon share\">\n                            <FontAwesomeIcon icon={faShareAlt} />\n                        </div>\n                    </div>\n                    <div className=\"name-sponsors\">\n                        <p className=\"project-name\">\n                            {project.name}\n                        </p>\n                        <div className=\"sponsors\">\n                            <img src={`${process.env.PUBLIC_URL}/assets/example-profile-img/airbnb.jpg`} alt=\"Airbnb logo\" className=\"sponsor-badge\"></img>\n                            <img src={`${process.env.PUBLIC_URL}/assets/example-profile-img/facebook.png`} alt=\"Facebook logo\" className=\"sponsor-badge\"></img>\n                            <img src={`${process.env.PUBLIC_URL}/assets/example-profile-img/coca-cola.png`} alt=\"Coca Cola logo\" className=\"sponsor-badge\"></img>\n                            <img src={`${process.env.PUBLIC_URL}/assets/example-profile-img/space-x.jpg`} alt=\"SpaceX logo\" className=\"sponsor-badge\"></img>\n                            <img src={`${process.env.PUBLIC_URL}/assets/example-profile-img/airfrance.png`} alt=\"AirFrance logo\" className=\"sponsor-badge\"></img>\n                        </div>\n                    </div>\n\n                    <div className=\"project-body\">\n\n                        <div className=\"body\">\n\n                            <div className=\"project-desc\">\n                                {project.description && project.description.map(\n                                    (desc, i) => (\n                                        <p key={i}>{desc}</p>\n                                    )\n                                )\n                                }\n                            </div>\n\n\n                            <div className=\"project-kpi\">\n                                <InvestButton project={project} />\n                                <p className=\"tree-cost\">${analytics.sowCost.toFixed(2)} per tree</p>\n                                <p className=\"tree-co2\">{analytics.offsetAverageTCo2.toFixed(2)} kg CO<sub>2</sub> per tree</p>\n                                <p className=\"co2-cost\">${analytics.co2AverageCost.toFixed(2)} per kg CO<sub>2</sub></p>\n                            </div>\n\n                        </div>\n\n                        <ProgressBarProject currentT={analytics.totalTreesPlanted} goalT={analytics.totalPlantingCapacity}/>\n\n                    </div>\n                </div>\n\n            </Card.ImgOverlay>\n        </Card>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/agenda.49dc75b7.svg\";","export default __webpack_public_path__ + \"static/media/tree.2fe36848.svg\";","export default __webpack_public_path__ + \"static/media/website.327d7ea9.svg\";","export default __webpack_public_path__ + \"static/media/area-graph.48eb7359.svg\";","export default __webpack_public_path__ + \"static/media/cloud-computing.68d720ba.svg\";","export default __webpack_public_path__ + \"static/media/save-the-planet.6daf2477.svg\";","export default __webpack_public_path__ + \"static/media/world-environment-day.115557b0.svg\";","export default __webpack_public_path__ + \"static/media/location.0b7d98ab.svg\";","export default __webpack_public_path__ + \"static/media/person.9a0ad1c3.svg\";","export default __webpack_public_path__ + \"static/media/money.5a1353da.svg\";","import React, { useContext, useEffect } from 'react';\nimport { Card } from \"react-bootstrap\";\nimport { CircularProgress } from \"@/components/progress\";\nimport AgendaIcon from \"../../assets/flat-icon/svg/agenda.svg\";\nimport TreeIcon from \"../../assets/flat-icon/svg/tree.svg\";\nimport WebSiteIcon from \"../../assets/flat-icon/svg/website.svg\";\nimport AreaGraphIcon from \"../../assets/flat-icon/svg/area-graph.svg\";\nimport CloudIcon from \"../../assets/flat-icon/svg/cloud-computing.svg\";\n//import PlantingIcon from \"../../assets/flat-icon/svg/planting.svg\";\nimport SavePlanetIcon from \"../../assets/flat-icon/svg/save-the-planet.svg\";\nimport WorldEnvIcon from \"../../assets/flat-icon/svg/world-environment-day.svg\";\nimport LocationIcon from \"../../assets/flat-icon/svg/location.svg\";\nimport MoneyIcon from \"../../assets/flat-icon/svg/money.svg\";\nimport PersonIcon from \"../../assets/flat-icon/svg/person.svg\";\n\nimport { FlatIcon } from \"@/components/icon\";\nimport { prefixNum } from \"@/helpers\";\nimport { InvestButton } from \".\";\nimport { useState } from 'react';\nimport { projectsService } from '@/services';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowCircleLeft, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport { useHistory } from 'react-router-dom';\nimport { MarketplaceContext } from \"@/context\";\n\n\nexport const DetailsCard = ({project}) => {\n\n    const {analytics, owner} = project;\n    \n\n    const [invest, setInvest] = useState({\n        Investments: 0,\n        Tree_cost: 0,\n        Trees: 0,});\n\n    const history = useHistory();\n\n    const goBack = () => {\n        history.goBack();\n    }\n    const { ngosRed } = useContext(MarketplaceContext);\n    const [ngos ,dispatch] = ngosRed;\n    const currentT = 0;\n    const number = 740;\n\n    useEffect(() => {\n        \n        if(!ngos.data || ngos.data.length !== 1){\n        dispatch({type: 'loading'});\n        dispatch({ type: 'finished', payload: [project.owner] });\n        }\n        // projectsService.getProjectInvestment(project.ID).then(\n        //     invest => {\n        //         setInvest(invest);\n        //     },\n        //     error => {\n        //     }\n        // );\n        // return () => {\n        //     setInvest({});\n        // }\n    }, [])\n\n\n    return (\n        <>\n        <Card.Img src={project.banner} variant=\"top\" className=\"banner-img\" style={{ objectFit: \"cover\" }} alt=\"project ngo\" />\n            <Card.ImgOverlay className=\"banner-img\">\n            {/* <button className=\"btn float-left pl-0\">\n                <FontAwesomeIcon className=\"text-white back-icon\" icon={faArrowLeft} onClick={goBack} />\n            </button> */}\n                <div className=\"sponsors\">\n                    <img src={`${process.env.PUBLIC_URL}/assets/example-profile-img/airbnb.jpg`} alt=\"Airbnb logo\" className=\"sponsor-badge\"></img>\n                    <img src={`${process.env.PUBLIC_URL}/assets/example-profile-img/facebook.png`} alt=\"Facebook logo\" className=\"sponsor-badge\"></img>\n                    <img src={`${process.env.PUBLIC_URL}/assets/example-profile-img/coca-cola.png`} alt=\"Coca Cola logo\" className=\"sponsor-badge\"></img>\n                    <img src={`${process.env.PUBLIC_URL}/assets/example-profile-img/space-x.jpg`} alt=\"SpaceX logo\" className=\"sponsor-badge\"></img>\n                    <img src={`${process.env.PUBLIC_URL}/assets/example-profile-img/airfrance.png`} alt=\"AirFrance logo\" className=\"sponsor-badge\"></img>\n                </div>\n            </Card.ImgOverlay>\n            <Card.Body className=\"card-body\">\n                <div className=\"project-details-header\">\n                    <div className=\"name-location\">\n                        <div>\n                            <p className=\"project-name\">\n                                {project.name}\n                            </p>\n                            <div className=\"d-flex align-items-center pt-2\">\n                                <FlatIcon><img src={LocationIcon} alt=\"icono agenda\" style={{ width: \"100%\" }} /></FlatIcon><p className=\"desc\" style={{ fontWeight: \"600\" }}>{project.countryCode}</p>\n                            </div>\n                        </div>\n\n                        {/* <p className=\"location\">\n                            {location}\n                        </p> */}\n                    </div>\n                    <div className=\"project-kpi\">\n                        <InvestButton project={project}/>\n                        {/* <p className=\"tree-cost\">${treeCost} USD per tree</p>\n                        <p className=\"tree-co2\">{carbonPerTree} {carbonUnit} CO<sub>2</sub> per tree</p>\n                        <p className=\"co2-cost\">${co2Cost} USD per {carbonUnit} CO<sub>2</sub></p> */}\n                    </div>\n                </div>\n\n                <div className=\"project-details-about\">\n                    <h1 className=\"title\">About</h1>\n                    \n                       {project.description&&project.description.map((projectDesc, i) =>(\n                           <p key={i} className=\"about-desc\">\n                               {projectDesc}\n                          </p>\n                       )\n                       )}\n                   \n                    <div className=\"project-kpis\">\n                        <div className=\"kpi\">\n                            <FlatIcon><img src={TreeIcon} alt=\"tree icon\" style={{ width: \"100%\", marginRight: \"10px\" }} /></FlatIcon><p className=\"desc\">Target Trees Count: <span className=\"value\"> {prefixNum(number, project.goalT)}</span></p>\n                        </div>\n                        <div className=\"kpi\">\n                            <FlatIcon><img src={CloudIcon} alt=\"cloud icon\" style={{ width: \"100%\", marginRight: \"10px\" }} /></FlatIcon><p className=\"desc\">Estimated CO<sub>2</sub> Absortion: <span className=\"value\">\n                                {prefixNum(number, project.offsetAverageTCo2)} tons\n                              \n                                </span></p>\n                        </div>\n                        <div className=\"kpi\">\n                            <FlatIcon><img src={AreaGraphIcon} alt=\"area icon\" style={{ width: \"100%\", marginRight: \"10px\" }} /></FlatIcon><p className=\"desc\">Plantation Area: <span className=\"value\">{prefixNum(number, project.plantingArea)} ha</span></p>\n                        </div>\n                        <div className=\"kpi\">\n                            <FlatIcon><img src={WorldEnvIcon} alt=\"worldenv icon\" style={{ width: \"100%\", marginRight: \"10px\" }} /></FlatIcon><p className=\"desc\">Planting Density: <span className=\"value\">{prefixNum(number, project.plantingDensity)}</span></p>\n                        </div>\n                        <div className=\"kpi\">\n                            <FlatIcon><img src={SavePlanetIcon} alt=\"saveplanet icon\" style={{ width: \"100%\", marginRight: \"10px\" }} /></FlatIcon><p className=\"desc\">Workers: <span className=\"value\">{project.workerCount}</span></p>\n                        </div>\n                        <div className=\"kpi\">\n                            <FlatIcon><img src={PersonIcon} alt=\"person icon\" style={{ width: \"100%\", marginRight: \"10px\" }} /></FlatIcon><p className=\"desc\">Landsite Ownership: <span className=\"value\">{project.ownerShip}</span></p>\n                        </div>\n                    </div>\n                    {/* <div className=\"project-details-about\">\n                        <h1 className=\"title\">Landsite Ownership</h1>\n                        <p>\n                            {ownerShip}\n                        </p>\n\n                    </div> */}\n                    {/* <div className=\"project-details-about\">\n                        <h1 className=\"title\">Planting Season</h1>\n                        <p>\n                            Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                        </p>\n                    </div> */}\n\n                    <div className=\"project-details-about\">\n                        <h1 className=\"title\">Project's Progress</h1>\n                        <div className=\"project-progress\">\n\n                            <div className=\"circular-progress mt-4\">\n                                <CircularProgress currentT={analytics.totalTreesPlanted} goalT={analytics.totalPlantingCapacity} number={number} />\n                            </div>\n                            <div className=\"progress-info\">\n                                <div className=\"total-count\">\n                                    <p className=\"counter\">$ {prefixNum(number, invest.Investments)} USD</p>\n                                    <p className=\"title\">Total Investments</p>\n                                </div>\n\n                                {/* <div className=\"total-count pt-4\">\n                                    <p className=\"counter\">{invest.Trees}</p>\n                                    <div className=\"title\">Trees planted</div>\n                                </div> */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"project-details-about\">\n                    <h1 className=\"title\">Contact</h1>\n                    <div className=\"project-kpis\">\n                        <div className=\"kpi\">\n                            <FlatIcon><img src={WebSiteIcon} alt=\"icono agenda\" style={{ width: \"100%\" }} /></FlatIcon><p className=\"desc\"><a href={owner.webpage}>{owner.webpage}</a></p>\n                        </div>\n                        <div className=\"kpi\">\n                            <FlatIcon><img src={AgendaIcon} alt=\"icono agenda\" style={{ width: \"100%\" }} /></FlatIcon><p className=\"desc\">{owner.email}</p>\n                        </div>\n                    </div>\n                </div>\n            </Card.Body>\n            </>\n    )\n}\n","import React, { useContext, useEffect, useRef } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { projectsService, } from \"@/services\";\nimport { MarketplaceContext } from \"@/context\";\nimport { useQuery } from \"@/hooks\";\nimport { DetailsCard } from \"./DetailsCard\";\n\n\nexport const ProjectDetails = () => {\n\n    const { projectsRed } = useContext(MarketplaceContext);\n    const [projects, dispatch] = projectsRed;\n    const id = useQuery(\"id\");\n    const isMounted = useRef(true);\n    console.log(projects);\n\n    useEffect(() => {\n        return () => {\n            isMounted.current = false;\n        }\n    }, [])\n\n    useEffect(() => {\n       \n        if (id) {\n            if(!projects.data || projects.data.lenght === 0){\n            dispatch({ type: 'loading' });\n            projectsService.getById(id).then(\n                projects => {\n                    if(isMounted.current){\n                    dispatch({ type: 'finished', payload: projects });\n                    console.log(projects);\n                    }\n                },\n                error => {\n                    if(isMounted.current){\n                    dispatch({ type: 'error', payload: error });\n                    console.log(error);\n                    }\n                }\n            );\n            }\n        }\n    }, [id]);\n\n    return (\n        \n        <Card className=\"project-details-card\">\n            {projects.data && projects.data.map((project, i) => {\n                return <DetailsCard key={i} project={project} />\n            })}\n        </Card>\n    )\n}\n","import React, { useRef, useEffect, useState, useContext } from \"react\";\nimport GraphicsLayer from \"@arcgis/core/layers/GraphicsLayer\";\nimport Graphic from \"@arcgis/core/Graphic\";\nimport { getCentroid, createMapView } from \"@/helpers\";\nimport { MarketplaceContext } from \"@/context\";\nimport { createTileLayer } from \"@/helpers\";\nimport {useHistory} from \"react-router-dom\";\n//import Point from \"@arcgis/core/geometry/Point\"\n\nexport const BubbleMap = () => {\n\n\n  const mapDiv = useRef();\n  const [view, setView] = useState();\n  const [graphicLayer, setGraphicLayer] = useState();\n  const basemap = createTileLayer();\n  \n  const { projectsRed } = useContext(MarketplaceContext);\n  const [projects] = projectsRed;\n\n  const history = useHistory();\n\n  const seeDetails= (id)=>{\n    history.push(`marketplace/project?id=${id}`)\n  }\n\n  //Load the map\n  useEffect(() => {\n\n    setView(createMapView(mapDiv));\n    setGraphicLayer(new GraphicsLayer());\n\n  }, []);\n\n  useEffect(() => {\n    const points = [];\n    if (projects.data && graphicLayer) {\n      graphicLayer.removeAll();\n      view.map.add(graphicLayer);\n      if (projects.data.length === 1) {\n        let opts = {\n          duration: 3000,\n          easing: \"ease-in-out\"  // Duration of animation will be 5 seconds\n        };\n\n        console.log(projects);\n        const polygonCordinates = projects.data[0].boundaries;\n        const cordinates = [];\n\n        polygonCordinates.forEach(\n\n          element => {\n\n            cordinates.push([element.Coordinate_Longitude, element.Coordinate_Latitude])\n          }\n        )\n\n        const polygonGraphic = new Graphic({\n          geometry: {\n            type: \"polygon\",\n            rings: cordinates\n          },\n          symbol: {\n            type: \"simple-fill\",\n            // color: [227, 139, 79, 0.8],  // Orange, opacity 80%\n            outline: {\n              color: [255, 255, 255],\n              width: 2\n            }\n          }\n\n        });\n        graphicLayer.add(polygonGraphic);\n        view.when(() => {\n          view.goTo({\n            // center: [centro.x, centro.y],\n            target: polygonGraphic,\n            zoom: 15\n          }, opts);\n        });\n\n      } else {\n\n        view.center = [-73.129807, 4.752534];\n        view.zoom = 0;\n        projects.data.forEach(\n          (project) => {\n\n            const centro = getCentroid(project.boundaries);\n            console.log(centro);\n            points.push({point:{ type: \"point\", longitude: centro.x, latitude: centro.y }, attributes: {projectID: project.id} });\n\n          }\n        )\n\n        const imageSymbol =\n        {\n          \"type\": \"picture-marker\",\n          \"url\": `${process.env.PUBLIC_URL}/assets/location.png`,\n          \"width\": \"40px\",\n          \"height\": \"40px\"\n        };\n\n        for (let i = 0; i < points.length; i++) {\n\n          var Point = { ...points[i] };\n\n          const pointGraphic = new Graphic({\n            geometry: Point.point,\n            symbol: imageSymbol,\n            attributes: Point.attributes\n          });\n          graphicLayer.add(pointGraphic);\n        }\n\n        view.on(\"click\", function (event) {\n          view.hitTest(event).then(function (response) {\n            if (response.results.length) {\n\n              try{\n              var graphic = response.results.filter(function (result) {\n                // check if the graphic belongs to the layer of interest \n                return result.graphic.layer === graphicLayer;\n              })[0].graphic;\n              seeDetails(graphic.attributes.projectID);\n             }catch{\n               console.log(\"error Graphic\");\n             }\n\n              \n\n            } \n          });\n        });\n      }\n    }\n\n  }, [projects]);\n\n  return (\n    <>\n      <div className=\"map-div\" ref={mapDiv}></div>\n    </>\n  )\n}\n\n","\nimport MapView from \"@arcgis/core/views/MapView\";\nimport Map from \"@arcgis/core/Map\";\nimport BasemapToggle from \"@arcgis/core/widgets/BasemapToggle\";\nimport BasemapGallery from \"@arcgis/core/widgets/BasemapGallery\";\nimport { createTileLayer } from \"@/helpers\";\n\nexport const createMapView = (mapDiv) => {\n\n    const basemap = createTileLayer();\n\n    const map = new Map({\n        basemap: basemap,\n        //basemap: \"arcgis-imagery-standard\"\n    });\n\n    const view = new MapView({\n        map: map,\n        center: [-73.129807, 4.752534], // Longitude, latitude\n        zoom: 3, // Zoom level\n        container: mapDiv.current, // Div element\n        navigation: {\n            mouseWheelZoomEnabled: false,\n            browserTouchPanEnabled: false\n        }\n    });\n\n    view.ui.move(\"zoom\", \"top-right\");\n\n    view.constraints = {\n        minScale: 100000000, // User cannot zoom out beyond a scale of 1:500,000\n        maxScale: 0, // User can overzoom tiles\n        rotationEnabled: false // Disables map rotation\n    };\n\n    const basemapToggle = new BasemapToggle({\n        view: view,\n        nextBasemap: \"arcgis-imagery\"\n     });\n\n      view.ui.add(basemapToggle,\"top-right\");\n\n\n    return view;\n}\n","import React from \"react\"\nimport { BubbleMap } from \"@/components/map\"\n\nexport const ProjectMap = ({projects}) => {\n    return (\n        <div className=\"map\">\n            <BubbleMap projects = {projects}/>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport ContentLoader from \"react-content-loader\"\n\nexport const ProjectCardLoading = ({uniqueKey}) => {\n    return (\n        <Card className=\"project-card \">\n            \n            <Card.Body>\n                <ContentLoader\n                    uniqueKey = {uniqueKey}\n                    speed={2}\n                    width={380}\n                    height={160}\n                    viewBox=\"0 0 400 160\"\n                    backgroundColor=\"#f3f3f3\"\n                    foregroundColor=\"#ecebeb\"\n                    style={{ width: '100%' }}\n                >   \n                    <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\"  width=\"200\" height=\"10\" />\n                    <rect x=\"0\" y=\"20\" rx=\"3\" ry=\"3\"  width=\"120\" height=\"10\" />\n                    <rect x=\"0\" y=\"55\" rx=\"3\" ry=\"3\" width=\"270\" height=\"8\" />\n                    <rect x=\"0\" y=\"70\" rx=\"3\" ry=\"3\" width=\"270\" height=\"8\" />\n                    <rect x=\"0\" y=\"85\" rx=\"3\" ry=\"3\" width=\"270\" height=\"8\" />\n                </ContentLoader>\n            </Card.Body>\n        </Card>\n    )\n}\n","import React, { useContext, useEffect, useRef } from \"react\"\n\nimport { ProjectCard } from \"./\";\nimport { useQuery } from \"@/hooks\";\nimport { projectsService } from \"@/services\";\nimport { MarketplaceContext } from \"@/context\";\nimport { ProjectCardLoading } from \"./ProjectCardLoading\";\n\nexport const Projects = () => {\n\n    \n    const id = useQuery(\"id\");\n    const { projectsRed } = useContext(MarketplaceContext);\n    const [projects, dispatch] = projectsRed;\n    const isMounted = useRef(true);\n    const loadComponent = [{key:1, uniqueKey:\"ramdom-one\"},{key:2, uniqueKey:\"ramdom-two\"},{key:3, uniqueKey:\"ramdom-three\"}];\n\n    useEffect(() => {\n        return () => {\n            isMounted.current = false;\n        }\n    }, [])\n\n    useEffect(() => {\n        \n        if (id) {\n            \n            dispatch({ type: 'loading' });\n            projectsService.getByNgoId(id).then(\n                projects => {\n                    if(isMounted.current){\n                    dispatch({ type: 'finished', payload: projects });\n                    }\n                },\n                error => {\n                    if(isMounted.current){\n                    dispatch({ type: 'error', payload: error });\n                    }\n                }\n            );\n            \n            \n        } else {\n            dispatch({ type: 'loading' });\n            projectsService.getAll().then(\n                projects => {\n                    if(isMounted.current){\n                    dispatch({ type: 'finished', payload: projects });\n                    console.log(projects);\n                    }\n                },\n                error => {\n                    if(isMounted.current){\n                    dispatch({ type: 'error', payload: error });\n                    console.log(error);\n                    }\n                }\n            );\n        }\n    }, [id]);\n    \n    return (\n        <div className=\"marketplace-projects\">\n            {projects.loading && loadComponent.map(element => {\n                return <ProjectCardLoading key={element.key} uniqueKey={element.uniqueKey}/>;\n            })}\n            {projects.data && projects.data.map((project, i) => {\n                return <ProjectCard key={i} project = {project} />;\n            })}\n        </div>\n    )\n}\n","\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport { PrivateRoute } from \"@/components/route\";\nimport { Footer, Navbar } from \"@/pages/general\";\nimport { LandingPage } from \"@/pages/landing-page\";\nimport { Dashboard } from \"@/pages/dashboard\";\nimport { Account } from \"@/pages/account\";\nimport { Project } from '@/pages/project';\nimport { MarketPlace } from \"@/pages/market-place\";\n\nexport const AppRouter = () => {\n    return (\n        <Router basename=\"/\">\n            <Navbar />\n            <Switch>\n                <Route exact path=\"/\" component={LandingPage} />\n                <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                <PrivateRoute exact path=\"/account\" component={Account} />\n                <PrivateRoute exact path=\"/project\" component={Project} />\n                <Route path=\"/marketplace\" component={MarketPlace} />\n                <PrivateRoute path=\"/profile\" component={Dashboard} />\n                <Route path=\"*\" component={() => <Redirect to=\"/\" />}></Route>\n            </Switch>\n            <Footer />\n        </Router >\n    )\n}\n","import \"./scss/App.scss\";\nimport { AppRouter } from \"@/routers\";\n\nconst App = () => {\n\treturn (\n\t\t<>\n\t\t\t<AppRouter />\n\t\t</>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport config from \"@arcgis/core/config\";\nimport { configureFakeBackend } from '@/helpers';\n// configureFakeBackend();\n\nconfig.apiKey = \"AAPK8c795fd716244118be11f2d482cfad7aD0Rl0nlCDFMcBGFZGGPcbZ6gb9HPrP16_4jkmhujxsvybdq-SUZMASoyj_NdYzdD\";\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = {\"apiUrl\":\"/api/catalog\"};"],"sourceRoot":""}